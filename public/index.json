[{"categories":["评测合辑"],"content":"本人早年参与过多次酒局，与三五好友把酒言欢，纵享欢乐。特此对席间所玩娱乐项目作一记录，以便不时之需。 ","date":"2023-10-19","objectID":"/%E9%85%92%E6%A1%8C%E5%B8%B8%E7%94%A8%E7%BA%B8%E7%89%8C%E7%8E%A9%E6%B3%95/:0:0","tags":null,"title":"酒桌常用纸牌玩法","uri":"/%E9%85%92%E6%A1%8C%E5%B8%B8%E7%94%A8%E7%BA%B8%E7%89%8C%E7%8E%A9%E6%B3%95/"},{"categories":["评测合辑"],"content":"1. 十三张 庄家按顺序向在场所有玩家（包括自己）依次发牌，一次一人一张牌，每名玩家根据拿到的牌面不同开始不同玩法。游戏进行过程中除了抽到”8“的玩家，其余人不得上厕所。 A：可以指定一名玩家喝一杯酒，或者留下为自己挡一杯酒（其他玩家的A、K和陪酒员陪酒不能挡）。 2：”小姐牌“，抽到的玩家成为陪酒员，每当场上有其他玩家喝酒，陪酒员就需要陪喝一杯，喝之前需要说”大爷您喝好“，直到对方满意。 3：逛三园，抽到的玩家设定一个范围，其中包含的内容数量至少要大于场上人数（如6人在场，不能问人的手指头有哪些），并自己先说一个。常用的”三园“指的是蔬菜园、水果园、动物园。进阶版玩法可由抽到的玩家任意指定范围。指定范围后其余玩家依次迅速说出一个之前玩家没有说过的符合条件的事物，当出现一名玩家犹豫不决或说的事物不符合范围或说出前人说过的，罚酒一杯并结束游戏。如果该错误玩家后续的玩家并未及时中止游戏而是继续报事物名，则也要罚酒一杯。 4：抽到4的玩家可以在场上指定任意一名玩家并与之划拳，玩法不限，由被指定的玩家选择玩法。输者罚酒一杯。 5：照相机牌，抽到5的玩家可以先将这张牌存在手里，选择游戏进行的任意时间大喊一声”照相机！“，听到喊声的场上所有人都应立即停止所有身体动作静止不动，只有喊的人可以随意自由动。第一个做出动作打破静止状态的玩家罚酒一杯。 6：6号牌玩法有两种，第一种是”扭一扭“，即由抽到的玩家选定一个10以内的数字X，并快速说出句子”X棵柳树扭X扭“，其余玩家依次快速说出这个句子，数字递增1，直到出现一名玩家说错或说慢，该玩家自罚一杯。第二种是摸鼻子，即抽到6的玩家可以先将这张牌存在手里，选择游戏进行的任意时间用手不断抚摸鼻子，所有看到的其他玩家应当立即一起用手抚摸鼻子，最后一名抚摸鼻子的玩家自罚一杯。 7：敲七，由抽到这张牌的玩家先报出一个10以内的数字，所有玩家依次快速报数，每逢带有7的和7的倍数时可以喊一声”过“或者拍一下手，不报出该数字。直到出现一名玩家报错数字或未正确让过”7“未止，该玩家和如有后续未发现错误的玩家一并自罚一杯。 8：厕所牌，抽到8的玩家可以先将这张牌存在手里，想上厕所的时候使用，也可给其他玩家使用。 9：即”酒“，抽到的玩家自罚一杯。 10：神经病牌，抽到的玩家应立即大喊一声”我是神经病！“，此后其余玩家都不能与之对话，庄家可以正常发牌但不能与之闲谈，第一个与之闲谈对话的玩家自罚一杯。 J：抽到这张牌的玩家左手边的玩家自罚一杯。 Q：抽到这张牌的玩家右手边的玩家自罚一杯。 K：整局游戏第一个抽到K的玩家自罚一杯，同时确定下一个抽到的玩家喝多少，一杯起步，三杯封顶。下一个抽到K的玩家要按照上一位玩家定的数量饮酒，之后再确定下一个抽到K的玩家喝多少。 小王、大王：同9，自罚一杯 ","date":"2023-10-19","objectID":"/%E9%85%92%E6%A1%8C%E5%B8%B8%E7%94%A8%E7%BA%B8%E7%89%8C%E7%8E%A9%E6%B3%95/:1:0","tags":null,"title":"酒桌常用纸牌玩法","uri":"/%E9%85%92%E6%A1%8C%E5%B8%B8%E7%94%A8%E7%BA%B8%E7%89%8C%E7%8E%A9%E6%B3%95/"},{"categories":["评测合辑"],"content":"2. 高山流水 庄家先取数个空酒杯（至少3个）排成一行摆放在桌面上。庄家按顺序向在场所有玩家（包括自己）依次发牌，一人一张底牌，除庄家外，拿到牌的玩家自己悄悄看好牌面数字后将牌扣好，庄家直接将自己的底牌扣好不能查看（暗庄）。从A到K依次为1~13，大小王为0。之后庄家从牌堆顶翻开第一张牌并公示，同时快速依次向排好的空酒杯中倒酒。当有玩家认为自己的底牌和明牌最接近（绝对值最小）时，应及时大喊一声”停！“，庄家停止倒酒。叫牌的玩家应上交手中的底牌并喝掉庄家倒出的所有酒。庄家取牌堆顶最上面一张牌重新发给叫牌的玩家作为底牌。如场上所有玩家都没有叫牌，庄家应在倒满所有酒杯后停止倒酒，场上所有玩家同时开牌（包括庄家自己），与明牌最接近的玩家喝掉所有酒。如有多名玩家同时叫牌或开牌后有多名玩家牌面点数一致，则这些玩家共同分担场上的酒。 ","date":"2023-10-19","objectID":"/%E9%85%92%E6%A1%8C%E5%B8%B8%E7%94%A8%E7%BA%B8%E7%89%8C%E7%8E%A9%E6%B3%95/:2:0","tags":null,"title":"酒桌常用纸牌玩法","uri":"/%E9%85%92%E6%A1%8C%E5%B8%B8%E7%94%A8%E7%BA%B8%E7%89%8C%E7%8E%A9%E6%B3%95/"},{"categories":["评测合辑"],"content":"3. 世界大战 由在场两名玩家作为红蓝双方BOSS，划拳，第一轮划拳赢的玩家确定游戏失败的一方喝多少酒，总玩家数杯为上限。从第二轮划拳开始，赢的玩家挑选大将，即选择一名其他玩家归为自己阵营，直到场上所有玩家都归为红蓝两个阵营（数字可以不对等）。由人少的一方先点将出战，另一方点将迎战，两名大将划拳，玩法不限，输的人即死亡，赢的人可以继续战斗对方阵营其他大将或BOSS。每员大将有一条命，BOSS有两条命。双方一直战斗到一个阵营全员阵亡为止，输的一方阵营所有成员要按照游戏最开始定的酒量分担喝完所有酒。 ","date":"2023-10-19","objectID":"/%E9%85%92%E6%A1%8C%E5%B8%B8%E7%94%A8%E7%BA%B8%E7%89%8C%E7%8E%A9%E6%B3%95/:3:0","tags":null,"title":"酒桌常用纸牌玩法","uri":"/%E9%85%92%E6%A1%8C%E5%B8%B8%E7%94%A8%E7%BA%B8%E7%89%8C%E7%8E%A9%E6%B3%95/"},{"categories":["评测合辑"],"content":"4. 金钩钓鱼 庄家先翻开牌堆顶第一张牌放入明牌堆，由一名玩家猜下一张牌点数比这张牌大还是小（只能猜大小，不能猜一样），之后庄家再翻开第二张牌放入明牌堆，如猜测正确，游戏继续，猜测错误，当前明牌堆的所有牌交给这一轮的玩家，每张牌代表一杯酒。每名玩家至少猜测正确两次后即可过到下一名玩家进行游戏，也可以继续猜直到想让下一名玩家开始（但必须一直猜对，猜错就要罚酒且重新计数至少两次）。 特殊情况1：当翻开的明牌为6、7、8时即使猜对也不计次数（678不过） 特殊情况2：当翻开的明牌和上一张牌相同时，当前玩家获得明牌堆，且罚酒为双倍（一样双倍） 特殊情况3：当翻开的明牌为大小王时，当前玩家获得明牌堆，且罚酒为双倍（出王双倍） ","date":"2023-10-19","objectID":"/%E9%85%92%E6%A1%8C%E5%B8%B8%E7%94%A8%E7%BA%B8%E7%89%8C%E7%8E%A9%E6%B3%95/:4:0","tags":null,"title":"酒桌常用纸牌玩法","uri":"/%E9%85%92%E6%A1%8C%E5%B8%B8%E7%94%A8%E7%BA%B8%E7%89%8C%E7%8E%A9%E6%B3%95/"},{"categories":["评测合辑"],"content":"5. 消消乐 庄家取9个空酒杯按3*3摆放在桌面上，按顺序依次编号为1~9，之后向在场玩家依次发牌。如玩家抽到10、J、Q、K、大小王，则直接过下一名玩家，如抽到1~9的牌，根据不同情况判断。 情况1：对应编号酒杯中有酒，喝掉这杯中的酒 情况2：对应编号为空杯且所在的横行和竖列都存在其他空杯（若此杯倒酒不能凑成满行或满列带酒），由抽到的玩家向该空杯中注入任意多的酒 情况3：对应编号为空杯且所在的横行和竖列没有其他空杯（若此杯倒酒则可以凑成满行或满列带酒），由抽到的玩家喝掉这一行或这一列剩下两杯中的酒，并向该空杯中注入任意多的酒 ","date":"2023-10-19","objectID":"/%E9%85%92%E6%A1%8C%E5%B8%B8%E7%94%A8%E7%BA%B8%E7%89%8C%E7%8E%A9%E6%B3%95/:5:0","tags":null,"title":"酒桌常用纸牌玩法","uri":"/%E9%85%92%E6%A1%8C%E5%B8%B8%E7%94%A8%E7%BA%B8%E7%89%8C%E7%8E%A9%E6%B3%95/"},{"categories":["评测合辑"],"content":"6. 打关 庄家将牌堆中所有纸牌按两张一组分为27组，反扣平铺在桌面上。从第一名玩家开始，任选一组牌并翻开查看，由所选牌组里的两张牌加上一张脑补的除大小王以外任意牌凑成三张牌，与庄家比大小。玩家看牌后即可叫酒，可叫一到两杯。如此阶段玩家自愿放弃叫酒，即可只喝半杯（投降输一半）。玩家叫酒以后庄家可选择应战或投降，投降即直接喝玩家叫酒的一半（投降输一半），无需翻牌。如选择应战，则应在剩余牌组中任选一组牌并翻开查看，同样由所选牌组里的两张牌加上一张脑补的除大小王以外任意牌凑成三张牌，开始与玩家的三张牌进行比较。比较规则和炸金花基本一致，即：大王\u003e小王\u003e豹子\u003e同花顺\u003e同花\u003e顺子\u003e对子。无论庄家大还是玩家大，输的一方要喝掉玩家所叫的酒量。每一名玩家需与庄家战斗到庄家喝酒才可过到下一名玩家战斗，即庄家投降或失败才行（庄喝才算过）。 ","date":"2023-10-19","objectID":"/%E9%85%92%E6%A1%8C%E5%B8%B8%E7%94%A8%E7%BA%B8%E7%89%8C%E7%8E%A9%E6%B3%95/:6:0","tags":null,"title":"酒桌常用纸牌玩法","uri":"/%E9%85%92%E6%A1%8C%E5%B8%B8%E7%94%A8%E7%BA%B8%E7%89%8C%E7%8E%A9%E6%B3%95/"},{"categories":["评测合辑"],"content":"7. 血腥十点半 一副纸牌中每张牌都对应一个数字，其中1~10对应牌面上的数字，J、Q、K、大小王对应0.5，即半点，所有玩家的任务是在不超过十点半的情况下尽力使手中的牌凑出十点半来。 庄家按顺序向在场所有玩家（包括自己）依次发牌，一人一张底牌，除庄家外，拿到牌的玩家自己悄悄看好牌面数字后将牌扣好，庄家直接将自己的底牌扣好不能查看（暗庄）。之后庄家取在场人数+2张牌作为拍卖牌扣好。游戏过程中按六口一杯计算，底酒为一杯（六口）。 先由庄家翻开并展示第一张拍卖牌，所有人依次叫酒竞拍这张牌，一口起叫。叫酒的人要立刻喝掉所叫的酒量，无论最终是否能拍得这张牌。后续的玩家如需要这张牌，则要比先前的玩家叫更大的量并喝掉。如不需要，可直接过不叫酒。庄家也可参与到叫酒过程中。叫酒最多的玩家将获得这张拍卖牌，如一张拍卖牌无人叫酒，则直接流拍丢弃。 如游戏过程中有玩家的手牌恰好凑够十点半，应立即翻开展示，同时丢弃手牌，退出游戏。此时场上底酒翻一倍（一杯变两杯，两杯变四杯）。其余玩家继续进行游戏，直到所有拍卖牌全部拍卖或流拍。处理完全部拍卖牌后，场上还在继续游戏的玩家（包括庄家）应同时亮出手牌，查看谁离十点半差的最多（绝对值最大），该玩家喝掉所有底酒。如失败的玩家不止一名，则共同分担底酒。如出现任何一名玩家手牌超过十点半（爆点），无论是游戏中自己展示还是游戏结算时统一展示，都由爆点的玩家喝掉所有底酒，其余玩家不需要喝酒。 ","date":"2023-10-19","objectID":"/%E9%85%92%E6%A1%8C%E5%B8%B8%E7%94%A8%E7%BA%B8%E7%89%8C%E7%8E%A9%E6%B3%95/:7:0","tags":null,"title":"酒桌常用纸牌玩法","uri":"/%E9%85%92%E6%A1%8C%E5%B8%B8%E7%94%A8%E7%BA%B8%E7%89%8C%E7%8E%A9%E6%B3%95/"},{"categories":["评测合辑"],"content":"烹饪，对于我和太太而言实属难事，我二人均不会下厨做饭。所以简记一些快手餐谱，以便随时查阅，也可起到评测鉴别之作用。 ","date":"2023-10-19","objectID":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/:0:0","tags":null,"title":"懒人餐饮清单","uri":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/"},{"categories":["评测合辑"],"content":"1. 快手食品 ","date":"2023-10-19","objectID":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/:1:0","tags":null,"title":"懒人餐饮清单","uri":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/"},{"categories":["评测合辑"],"content":"1.1 霸蛮常德红烧牛肉汤粉（9/10） 粉包打开后取粉，大量冷水下锅，煮水时轻轻搅动防止底部粘锅，水沸腾后继续煮10分钟，直到筷子可以夹断即可捞出。汤包不要打开，整体在沸水中加热，热后浇在粉上，撒好配菜即可食用。制作较为简单快捷，成品口感很棒，微辣。 ","date":"2023-10-19","objectID":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/:1:1","tags":null,"title":"懒人餐饮清单","uri":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/"},{"categories":["评测合辑"],"content":"1.2 良工坊眷村风味牛肉面（6/10） 将面条开水下锅加热至熟透，盒子上写的5分钟，实际5分钟远远不够，面熟得要一阵子。牛肉汤包和胡萝卜包不打开，整包放入沸水中加热，打开后浇在面条上，洒上小料即可食用。制作方法简单，成品口感不错，不辣。 ","date":"2023-10-19","objectID":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/:1:2","tags":null,"title":"懒人餐饮清单","uri":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/"},{"categories":["评测合辑"],"content":"1.3 山姆印尼椰香仁当牛腩（5/10） 主食需要先煮饭。料理包可以用沸水加热，微波加热，或者直接打开倒进锅里加热2-3分钟，即可制作一碗盖浇饭。但是味道一般，主要是咖喱粉的缘故，咖喱粉还是不怎么好吃。 ","date":"2023-10-19","objectID":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/:1:3","tags":null,"title":"懒人餐饮清单","uri":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/"},{"categories":["评测合辑"],"content":"1.4 朕宅日式牛肉拌饭料（8/10） 肉包需要冰冻保存。食用的时候取出后直接沸水加热，然后浇在饭上就好了。非常好吃，就是分量有点小，牛肉不多，基本是汤泡饭。 ","date":"2023-10-19","objectID":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/:1:4","tags":null,"title":"懒人餐饮清单","uri":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/"},{"categories":["评测合辑"],"content":"1.5 尚巧厨展艺意式和牛肉酱披萨（7/10） 冰冻保存，无需解冻，冰箱取出直接烤箱烤，预热230度，上管230度，下管200度，放置中间层，烤10分钟即可取出食用。我感觉味道很不错，意大利披萨的风味很足，但我对象不是非常喜欢这个披萨。口味嘛，本身就因人而异。牛肉酱没有想象中的多，但是芝士不少。一个比较大的问题是，饼皮，尤其是周围一圈，太硬了。可能跟我烤的时间有点长了有关系。 ","date":"2023-10-19","objectID":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/:1:5","tags":null,"title":"懒人餐饮清单","uri":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/"},{"categories":["评测合辑"],"content":"1.6 尚巧厨展艺芝士牛肉卷（7/10） 冰冻保存，需要解冻，解冻后烤箱190度，预热后烤18分钟即可取出食用。牛肉块很大，分量很足，味道也不错。美中不足是芝士少了点，但总体而言瑕不掩瑜。饼皮很酥脆 ，肉质鲜嫩多汁。 ","date":"2023-10-19","objectID":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/:1:6","tags":null,"title":"懒人餐饮清单","uri":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/"},{"categories":["评测合辑"],"content":"1.7 美乐食卓熔岩蛋包饭（8/10） 冰冻保存，需要解冻。解冻后，饭包和蛋包微波炉加热10分钟左右，汤包沸水加热5分钟左右，将饭倒进盘子里，蛋放在饭上用刀划开，最后浇上汤汁，就好了。实话说米饭比较一般，但是咖喱和流心蛋味道不错，总体还是很好吃的。 ","date":"2023-10-19","objectID":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/:1:7","tags":null,"title":"懒人餐饮清单","uri":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/"},{"categories":["评测合辑"],"content":"1.8 料理说越式西贡河粉（7/10） 开水煮粉6分钟，然后热水冲汤，捞粉下汤。开水煮牛三宝1分钟也放入汤中，依次下入小菜即可食用，比较便捷。做好了味道很不错，基本可以媲美外面小店买的越南河粉。 ","date":"2023-10-19","objectID":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/:1:8","tags":null,"title":"懒人餐饮清单","uri":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/"},{"categories":["评测合辑"],"content":"1.9 霸蛮常德红烧牛肉汤粉（5/10） 操作和汤粉类似，粉包打开后取粉，大量冷水下锅，煮水时轻轻搅动防止底部粘锅，水沸腾后继续煮10分钟，直到筷子可以夹断即可捞出。捞出后放入冷水中过一下口感更好。汤包不要打开，整体在沸水中加热1-2分钟，热后浇在粉上，撒好配菜搅拌后即可食用。制作较为简单快捷，成品口感一般，辣度较高，且有些弹牙。 ","date":"2023-10-19","objectID":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/:1:9","tags":null,"title":"懒人餐饮清单","uri":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/"},{"categories":["评测合辑"],"content":"2. 火锅烤肉 ","date":"2023-10-19","objectID":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/:2:0","tags":null,"title":"懒人餐饮清单","uri":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/"},{"categories":["评测合辑"],"content":"2.1 山姆Member’s Mark寿喜锅（6/10） 圆形的一大盒，有一包浓缩汤底和一堆食材，将汤底倒入锅内，加入1200ml水，放入食材后加热煮熟即可食用。味道不错，但是食材并不是非常实惠，肉类食材较少，牛肉只有5-6片。考虑到88元的售价，我认为不如自购寿喜锅底和各种食材自己做划算。 ","date":"2023-10-19","objectID":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/:2:1","tags":null,"title":"懒人餐饮清单","uri":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/"},{"categories":["评测合辑"],"content":"2.2 万字寿喜锅调味汁（8/10） 这个单纯是寿喜锅汤底，跟清水1:4比例配置就可以作为锅底煮寿喜锅了。味道很NICE，但是还是挺咸的，可以适当提高清水的比例。 ","date":"2023-10-19","objectID":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/:2:2","tags":null,"title":"懒人餐饮清单","uri":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/"},{"categories":["评测合辑"],"content":"2.3 山姆韩式果香烤牛排（9/10） 一盒是三包，一包里面有两块牛排.牛排都是已经刷好了料的，取出牛排放在烤箱里，预热180度烤5分钟，翻个面再烤5分钟，拿出来就可以吃了。味道不输外面的烤牛排，配点意大利面，无敌。 ","date":"2023-10-19","objectID":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/:2:3","tags":null,"title":"懒人餐饮清单","uri":"/%E6%87%92%E4%BA%BA%E9%A4%90%E9%A5%AE%E6%B8%85%E5%8D%95/"},{"categories":["评测合辑"],"content":"作为一名屈臣氏苏打水的资深爱好者，20年莫吉托味上市时就发过一条全口味评测的朋友圈。现在将它搬运到博客上来，水一水字数。 ","date":"2023-07-08","objectID":"/%E5%B1%88%E8%87%A3%E6%B0%8F%E8%8B%8F%E6%89%93%E6%B0%B4%E8%AF%84%E6%B5%8B/:0:0","tags":null,"title":"屈臣氏苏打水评测","uri":"/%E5%B1%88%E8%87%A3%E6%B0%8F%E8%8B%8F%E6%89%93%E6%B0%B4%E8%AF%84%E6%B5%8B/"},{"categories":["评测合辑"],"content":"1. 原味 酸度：0/10 甜度：0/10 咸度：7/10 苦度：10/10 糖分：无糖 得分：1/10 点评：极致的苦涩。真·碳酸氢钠水溶液。极其不推荐直饮。调酒兑饮料等功效可以考虑，如果非要直饮，你大概率会后悔的，除非你就喜欢碳酸氢钠水溶液。 ","date":"2023-07-08","objectID":"/%E5%B1%88%E8%87%A3%E6%B0%8F%E8%8B%8F%E6%89%93%E6%B0%B4%E8%AF%84%E6%B5%8B/:1:0","tags":null,"title":"屈臣氏苏打水评测","uri":"/%E5%B1%88%E8%87%A3%E6%B0%8F%E8%8B%8F%E6%89%93%E6%B0%B4%E8%AF%84%E6%B5%8B/"},{"categories":["评测合辑"],"content":"2. 盐味 酸度：0/10 甜度：0/10 咸度：9/10 苦度：9/10 糖分：无糖 得分：3/10 点评：很苦又齁咸。基本上是原味兑咸盐。如果你受不了原味，那你也最好别尝试这个。能比原味易于接受点，但是并没有好太多。除非你口味重能吃咸的，否则不推荐直饮。 ","date":"2023-07-08","objectID":"/%E5%B1%88%E8%87%A3%E6%B0%8F%E8%8B%8F%E6%89%93%E6%B0%B4%E8%AF%84%E6%B5%8B/:2:0","tags":null,"title":"屈臣氏苏打水评测","uri":"/%E5%B1%88%E8%87%A3%E6%B0%8F%E8%8B%8F%E6%89%93%E6%B0%B4%E8%AF%84%E6%B5%8B/"},{"categories":["评测合辑"],"content":"3. 干姜水 酸度：6/10 甜度：3/10 咸度：0/10 苦度：4/10 糖分：正常 得分：5/10 点评：口味独特，不好喝也不难喝。酸酸的口感中带着恰到好处的干姜辛辣气味，对于我这种不太喜欢吃姜和姜糖的人而言，有点略显怪异。但是如果你喜欢吃姜、姜糖、姜汤，大概率会喜欢这个味道。据称可以搭配白兰地调制，我没有尝试过，就不过多作评价了。 ","date":"2023-07-08","objectID":"/%E5%B1%88%E8%87%A3%E6%B0%8F%E8%8B%8F%E6%89%93%E6%B0%B4%E8%AF%84%E6%B5%8B/:3:0","tags":null,"title":"屈臣氏苏打水评测","uri":"/%E5%B1%88%E8%87%A3%E6%B0%8F%E8%8B%8F%E6%89%93%E6%B0%B4%E8%AF%84%E6%B5%8B/"},{"categories":["评测合辑"],"content":"4. 莫吉托味 酸度：6/10 甜度：5/10 咸度：2/10 苦度：4/10 糖分：低糖 得分：6/10 点评：好喝。酸酸甜甜的口味中夹杂着一丝淡淡的苦涩，高度还原了莫吉托的酒精饮料之感，但它本身并不是酒精饮料。富含二氧化碳的感觉又能带来莫吉托的清爽体验。只不过，味道和真正的莫吉托仍然是有所差距，但是太较真就没必要啦。推荐直饮。 ","date":"2023-07-08","objectID":"/%E5%B1%88%E8%87%A3%E6%B0%8F%E8%8B%8F%E6%89%93%E6%B0%B4%E8%AF%84%E6%B5%8B/:4:0","tags":null,"title":"屈臣氏苏打水评测","uri":"/%E5%B1%88%E8%87%A3%E6%B0%8F%E8%8B%8F%E6%89%93%E6%B0%B4%E8%AF%84%E6%B5%8B/"},{"categories":["评测合辑"],"content":"5. 柠檬草味 酸度：8/10 甜度：6/10 咸度：0/10 苦度：3/10 糖分：正常 得分：7/10 点评：很好喝。类似于柠檬水的酸甜口感，当然酸味会稍微多一些，不过也没有酸到难以忍受的地步，我这种吃不了酸的人也完全能够接受。糖分是正常的，所以甜味也很足，推荐直饮。 ","date":"2023-07-08","objectID":"/%E5%B1%88%E8%87%A3%E6%B0%8F%E8%8B%8F%E6%89%93%E6%B0%B4%E8%AF%84%E6%B5%8B/:5:0","tags":null,"title":"屈臣氏苏打水评测","uri":"/%E5%B1%88%E8%87%A3%E6%B0%8F%E8%8B%8F%E6%89%93%E6%B0%B4%E8%AF%84%E6%B5%8B/"},{"categories":["评测合辑"],"content":"6. 汤力水 酸度：7/10 甜度：2/10 咸度：0/10 苦度：7/10 糖分：正常 得分：8/10 点评：首先介绍一下什么是汤力水。汤力水是苏打水+奎宁，也就是金鸡纳树皮提取物，用于抗疟疾的一种药物。可以直饮也可以调酒，著名的鸡尾酒“金汤力”就是金酒（杜松子酒）+汤力水。我个人非常喜欢汤力水，所以打分可能相对主观，客观的讲，口味先酸后苦。但是这个苦味并不同于原味苏打水的碱味，而是奎宁独特的苦。可以尝试一下，相信汤力水不会让你失望的。推荐直饮。 ","date":"2023-07-08","objectID":"/%E5%B1%88%E8%87%A3%E6%B0%8F%E8%8B%8F%E6%89%93%E6%B0%B4%E8%AF%84%E6%B5%8B/:6:0","tags":null,"title":"屈臣氏苏打水评测","uri":"/%E5%B1%88%E8%87%A3%E6%B0%8F%E8%8B%8F%E6%89%93%E6%B0%B4%E8%AF%84%E6%B5%8B/"},{"categories":["评测合辑"],"content":"7. 香草味 酸度：3/10 甜度：9/10 咸度：0/10 苦度：1/10 糖分：正常 得分：9/10 点评：非常好喝。我个人认为把它定义为苏打水可能有些委屈它，他就是饮料。如果你是第一次尝试屈臣氏苏打水，请无脑入这款，好喝就对了。 ","date":"2023-07-08","objectID":"/%E5%B1%88%E8%87%A3%E6%B0%8F%E8%8B%8F%E6%89%93%E6%B0%B4%E8%AF%84%E6%B5%8B/:7:0","tags":null,"title":"屈臣氏苏打水评测","uri":"/%E5%B1%88%E8%87%A3%E6%B0%8F%E8%8B%8F%E6%89%93%E6%B0%B4%E8%AF%84%E6%B5%8B/"},{"categories":["评测合辑"],"content":"有些朋友可能知道，我是一个三菱笔粉丝，日常基本主力使用各类三菱中性笔。用过这么多，突发奇想打算记录一下我所用过的这些笔，供大家参考。评测打分具有主观性，仅代表我个人使用体验。所有笔均为0.5黑色中性笔，测试统一使用“A quick brown fox jumps over the lazy dog”这一测试专用语句，请忽略我丑陋的英语字体。 ","date":"2023-07-08","objectID":"/%E4%B8%89%E8%8F%B1%E9%BB%91%E7%AC%94%E8%AF%84%E6%B5%8B/:0:0","tags":null,"title":"三菱黑笔评测","uri":"/%E4%B8%89%E8%8F%B1%E9%BB%91%E7%AC%94%E8%AF%84%E6%B5%8B/"},{"categories":["评测合辑"],"content":"1. UB-150 这支笔没啥好说的，一代笔神。国内抄袭模仿借鉴者众多，出现了以白雪为首的一大批直液式走珠笔。出墨非常丝滑，很少出现飞白、断墨的情况。笔尖也比较结实，我有一次曾经从桌上比较朝下跌落地面，捡起后仍然可以正常书写。缺点也很明显，出墨量较大导致笔尖很容易漏墨，特别是对于爱转笔的朋友，转几圈以后笔尖甚至可以很夸张的漏出一整滴墨汁来。 ","date":"2023-07-08","objectID":"/%E4%B8%89%E8%8F%B1%E9%BB%91%E7%AC%94%E8%AF%84%E6%B5%8B/:1:0","tags":null,"title":"三菱黑笔评测","uri":"/%E4%B8%89%E8%8F%B1%E9%BB%91%E7%AC%94%E8%AF%84%E6%B5%8B/"},{"categories":["评测合辑"],"content":"2. UB-155 UB-155是UB-150的升级改进版，三菱的第二代直液式走珠笔。相对第一代主要是大大改善了笔尖漏墨的问题，但是也严重影响了书写体验。这支笔出墨量很小，正常写字笔迹较轻，很容易飞白、断墨。同时，由于笔身设计成了纯黑色（我不知道是哪个脑残设计的），完全看不见墨腔里还有多少余墨，使用体验很差，不推荐这支笔。 ","date":"2023-07-08","objectID":"/%E4%B8%89%E8%8F%B1%E9%BB%91%E7%AC%94%E8%AF%84%E6%B5%8B/:2:0","tags":null,"title":"三菱黑笔评测","uri":"/%E4%B8%89%E8%8F%B1%E9%BB%91%E7%AC%94%E8%AF%84%E6%B5%8B/"},{"categories":["评测合辑"],"content":"3. UMN-105(UMR-85N) 这是一支按压替芯笔，使用的替芯是UMR-85N，一支很好用的替芯。书写体验较好，基本没有飞白、断墨的情况，出墨虽然比不上UB-150那么大，但也算得上流畅。笔身握持部分有一块软硅胶垫并且有内收设计，同时笔身总体质量很轻，长时间书写手感较舒适，不会感到太累。但其实我个人不是非常喜欢很轻的笔，所以总的来说，中规中矩吧，写字量较大的朋友可以购买。有一点需要注意，笔身的拆卸部分是在笔杆中间的旋扣，，每只笔做工质量存在差异，有少部分在更换一次替芯后可能会出现拧不紧，松动的情况。不太常见，但也确实存在。 ","date":"2023-07-08","objectID":"/%E4%B8%89%E8%8F%B1%E9%BB%91%E7%AC%94%E8%AF%84%E6%B5%8B/:3:0","tags":null,"title":"三菱黑笔评测","uri":"/%E4%B8%89%E8%8F%B1%E9%BB%91%E7%AC%94%E8%AF%84%E6%B5%8B/"},{"categories":["评测合辑"],"content":"4. UMN-155N-05(UMR-85N) 这支笔和UMN-105一样，都是采用的UMR-85N作为替芯，总的书写效果基本一致。笔身外观差距较大，握持部分是一块硬质磨砂材料，没有内收设计，笔身总体质量也较重一点。如果需要大量写字，从舒适度方面看还是UMN-105更胜一筹，但是如果写字量比较小的话，我个人会更倾向于使用这支笔。这支笔拆卸部分的做工小问题也存在，发生几率也不是很大，但我也确实遇到过一两支。 ","date":"2023-07-08","objectID":"/%E4%B8%89%E8%8F%B1%E9%BB%91%E7%AC%94%E8%AF%84%E6%B5%8B/:4:0","tags":null,"title":"三菱黑笔评测","uri":"/%E4%B8%89%E8%8F%B1%E9%BB%91%E7%AC%94%E8%AF%84%E6%B5%8B/"},{"categories":null,"content":"本文是关于网站AI板块的使用说明。 细心的朋友（嗯，理论上应该是没有人）可能已经发现了，网站首页菜单栏上线了一个新的板块——“AI”。是的，早在两个月前这个板块就已经上线了，但是内容不完善，所以我没有特意发文讲解。现在三部分内容已经完备了，在此作一简单的使用说明。 1.ChatGPT 脱胎于Yidadaa大佬的项目ChatGPT-Next-Web，同样部署于Vercel上（这三项服务目前都在Vercel上部署），这是一个兼容ChatGPT类接口的GPT对话前端。使用方式很简单，我会一步一步介绍。 我个人推荐使用API2D提供的服务，我这个私有部署也是基于这项服务的。如果需要使用其他服务，如OpenAI官方接口，请使用其他部署。打开API2D的官网，点击右上角的“登录·注册”并注册账号。 登入账号后，左侧“点数充值”这里可以进行充值。API2D采用P点进行计费，一个P点对应100个OpenAI GPT 3.5 模型的token。具体的计费规则参考“使用文档”中的“计费说明”。 充值后，在左侧“Forward Key”部分可以看到一个已经启用的密钥，点击复制它到剪切板。如果没有，请新建一个并复制。注意，这个密钥请务必收藏好，不能泄露给其他人使用。 打开网站AI板块的ChatGPT链接，你会看到这样的页面： 点击左下角齿轮形的设置图标，找到“API Key”这项设置，将刚刚复制的密钥粘贴进右侧的框框里。 随后点击右上角的X形图标关闭设置页面返回对话主页，只要账号的余额点数够用，就可以和ChatGPT愉快的对话了！ 其他的一些功能比如模型调整、预设对话、内置Prompts和“面具”，有兴趣的朋友们可以自行尝试，不过要注意余额哦。 2.Prompts List AI板块的第二个功能是提示词列表。脱胎于rockbenben的项目ChatGPT-Shortcut，截止目前已经收录了上百个有用的中英文双语提示词。使用AI对话工具，最重要的就是一个良好的提示词（也就是Prompt）。这个工具可以提供高质量的提示词合集供使用者选择和参考，非常便捷。使用起来也并不复杂，打开页面后，搜索、筛选、复制、粘贴，所有流程一目了然，清晰简洁。我自己也是这个项目的开发者之一，贡献了“AI”分类下的约20组提示词，做了一些尾小的工作。 3. Prompt Engineering Guide AI板块的第三个功能是“提示工程指南”。脱胎于dair-ai爆火的万星项目Prompt-Engineering-Guide，这套指南非常全面完备的介绍了提示工程学的基础运用，如果能够全文参透，可以掌握大部分对话型AI的使用方式和变通方法，堪称AI利器。指南被译为包含中文在内的九种语言并且不断更新，建议对AI运用感兴趣的朋友可以深入学习一下。 以上就是当前网站AI板块所提供的三项服务的一个简短说明介绍，后续AI板块还可能会根据实际情况加入一些自部署AI模型，比如Stable Diffusion，SoVits 4.0等。具体部署方案有待我进一步考察学习，最关键的是集资筹款。毕竟目前GPU和显存算力的这个价格嘛…真的太不友好了。 ","date":"2023-05-05","objectID":"/ai%E6%9D%BF%E5%9D%97%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/:0:0","tags":null,"title":"AI板块使用说明","uri":"/ai%E6%9D%BF%E5%9D%97%E4%BD%BF%E7%94%A8%E8%AF%B4%E6%98%8E/"},{"categories":["安卓那点事儿"],"content":"这两天休息在家，研究了一下小米MIUI 14刷机的方式，主要是结合Magisk模块安装和后续的一系列操作，在此作一简单记录。 两年前我写了一篇魔趣ROM的刷机教程。两年后，「斯人已逝」，魔趣ROM官方停止了更新。国产第三方ROM的时代一去不返了，此后只能研究折腾官方ROM了。而夹带私货的官方ROM，无论选哪个，都是吃屎一般的感觉，只不过某些屎相比其他的，可能还稍微容易让人下咽一些。本文的环境是：小米11，MIUI 14.0.8.0。在工作开始之前，需要先了解一个概念：Virtual A/B Partition。 注意 如果在操作过程中遇到无法下载的情况，请考虑网络因素。 ","date":"2023-04-24","objectID":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/:0:0","tags":null,"title":"MIUI 14刷机及Magisk安装","uri":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/"},{"categories":["安卓那点事儿"],"content":"0.理论铺垫 安卓系统为智能手机的普及立下了汗马功劳，可是开源所导致的碎片化问题，一直是谷歌心中难以掩饰的痛。为了改变这一现状，谷歌进行了许多尝试，例如在An­droid 7.0引入的「A/​B 无缝系统更新」，An­droid 8.0时推出的「Pro­ject Tre­ble」，都是为了铺平无障碍更新系统的道路，减轻更新失败导致设备故障的风险，以便厂商可以更轻松地推送系统更新。 而在Android 11版本，谷歌使用了名为「vir­tual A/​B」的新分区，并将其率先使用在Pixel 5 上。「vir­tual A/​B」更新系统的方法与「A/​B」类似，核心功能也相同。在系统进行OTA更新时，如果更新失败，则会自动回滚到上一个系统，成功开机进入之后才会将新数据写入到系统中。且系统更新可在待机状态下完成，无需重启等待新数据写入，可谓是极大地改善了更新系统时的用户体验。只是「A/​B」需要准备两个相同的分区，会占用更多的存储空间，而「vir­tual A/​B」删除了「cache」和「re­cov­ery」分区，「sys­tem」分区只保留一个，以解决上述空间占用问题。 小米11也是使用的「vir­tual A/​B」的机型，这对玩家而言并不是什么好消息。因为「vir­tual A/​B」删除了「re­cov­ery」分区，没有了「re­cov­ery」分区就不能刷入第三方「re­cov­ery」。因此在 TWRP 官方解决为这类新分区方式刷入第三方 re­cov­ery 之前，我们只能使用其他方法来为诸如小米11的使用Virtual A/B分区手机进行刷机了。 当然本文的目的只是安装Magisk模块，相比于完整刷机，简单很多，风险也小不少。 Magisk是什么？百度给出的解释是：Magisk是一套用于定制Android的开源工具,支持高于 Android4.2的设备。涵盖了Android定制的基本部分:root、引导脚本、SELInux修补、移除AVB2.0/dm-verity/强制加密等。它是当前Android社区用来获取root权限的主流方式。同时，Magisk特殊的运作机制还赋予了它systemless的特质。systemless让Magisk一方面可以有针对性地隐藏root，甚至暂时隐藏Magisk本身。另一方面，挂载系统的存在，也让Magisk拥有了多样的模块化生态系统。 在玩家群体里，Magisk被称为「面具」，基本是「搞机达人」人手必备的强大工具。有了它，就可以轻松获取root权限，挂载强大的功能模块。 ","date":"2023-04-24","objectID":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/:1:0","tags":null,"title":"MIUI 14刷机及Magisk安装","uri":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/"},{"categories":["安卓那点事儿"],"content":"1.准备工作 刷机之前，请务必备份手机里所有重要的个人数据，包括但不限于：通讯录、照片、应用数据等。刷机过程中会清除全部个人数据，所以一定一定做好备份！ ","date":"2023-04-24","objectID":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/:2:0","tags":null,"title":"MIUI 14刷机及Magisk安装","uri":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/"},{"categories":["安卓那点事儿"],"content":"2.手机解锁 现在不少手机是锁BootLoader的，BootLoader对于嵌入式设备（如ARM架构）而言类似于PC设备的BIOS。出于对设备安全性的考虑，厂商会锁定BootLoader以防止恶意程序或者不法分子篡改。那么如果我们要更换操作系统，第一步就是需要解锁BootLoader。很多国产手机厂商已经不支持解锁BL了，不过小米截至目前都是允许的。小米手机的解锁请参考这个页面，先下载手机解锁程序到电脑上，解压缩后，依次执行如下步骤： 在电脑上打开小米手机解锁程序（miflash_unlock.exe）； 同意条款，登录小米账户，进入待解锁界面； 拿出手机，进入「设置 -\u003e 我的设备 -\u003e 全部参数」页面； 这时连续点击MIUI版本号7次； 直到手机屏幕提示已经处于开发者模式即可停止点击； 进入「设置 -\u003e 更多设置 -\u003e 开发者选项 -\u003e 设备解锁状态」中按照提示绑定账号和设备，新机可能需要连续绑定账号7天才能继续进行操作； 手动进入Bootloader模式（先关机，然后同时按住开机键和音量下键，直到手机界面出现米兔画面和FASTBOOT字样）； 通过USB将电脑连接手机，点击程序上的「解锁」按钮。 解锁过程中根据电脑情况可能会自动安装小米手机驱动，并且联网验证当前手机，所以需要保持电脑和手机的联网状态。另外，根据机型不同，程序会提示解锁操作是否会清空全部用户数据，请注意备份数据。 解锁后手机会自动重启，如果解锁成功，在启动界面下方会出现一把打开的小锁头图标和「unlocked」字样。此时标志着解锁成功。 ","date":"2023-04-24","objectID":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/:3:0","tags":null,"title":"MIUI 14刷机及Magisk安装","uri":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/"},{"categories":["安卓那点事儿"],"content":"3.提取引导文件 Magisk模块的刷入需要通过修补系统引导文件「boot.img」的方式去完成，所以我们需要下载对应系统版本的线刷包，然后提取引导文件。小米的ROM可以在这个网址找到。搜索「mi 11」关键字后，找到对应的手机型号和系统版本，我使用的是国行14.0.8.0ROM，对应的在网站上名称是「MIUI China 14.0.8.0.TKBCNXM」。在下载链接处可以看到两个链接，分别是「Recovery」和「Fastboot」，前者是卡刷包，后者是线刷包。我们这里下载线刷包。下载好的文件解压缩后即可在根目录下找到boot.img文件，将他复制到手机中去。 ","date":"2023-04-24","objectID":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/:4:0","tags":null,"title":"MIUI 14刷机及Magisk安装","uri":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/"},{"categories":["安卓那点事儿"],"content":"4.安装Magisk 首先在此处下载Magisk Man­ager安装并打开，目前最新版是v26.1。打开后右上角有一个「安装」，点击「选择并修补一个文件」，从文件管理器中选择刚才复制过来的boot.img文件。Magisk会自动修补它，并将修补好的文件放在 /Download 目录下，名为「magisk_patched_xxxxx.img」。将这个修补好的文件复制到电脑，为下一步刷入做准备。 在本文附件1中下载ADB工具箱并解压到电脑中，连接手机到电脑，在「开发者选项」中打开手机的「USB调试」功能。双击工具箱中的「打开CMD命令行.bat」，依次输入下述命令： adb devices 该命令会成功列出当前adb设备，如果失败的话，可以检查驱动、数据线、电脑接口等，进行一一排查。 adb reboot bootloader 该命令会将手机重启到Fast­boot模式，然后就可以刷入打过补丁的boot.img了。由于修补过后的 magisk_patched_xxxxx.img名字每次都不一样，建议重命名为「magisk_patched.img」。由于是Virtual A/B分区方案，必须将两个分区中的引导文件全部修补才可以避免变砖。 fastboot flash boot_a magisk_patched.img fastboot flash boot_b magisk_patched.img 刷入成功后，输入fastboot reboot命令重启手机，不出意外的话，再次打开Magisk就可以看到已经成功的激活了。 ","date":"2023-04-24","objectID":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/:5:0","tags":null,"title":"MIUI 14刷机及Magisk安装","uri":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/"},{"categories":["安卓那点事儿"],"content":"5.文件管理 root手机以后，我们需要在这个链接下载Root Explorer，也就是大名鼎鼎的RE文件管理器。再获取root权限后，它可以浏览整个手机的文件系统，为后续编辑系统核心目录文件做好铺垫。下载下来的是安卓apk程序包，直接打开安装即可。 安装好启动程序，在Magisk中可以看到它索取root权限，点击授权，即可正常访问所有目录。可以尝试访问 /data/adb 目录做测试，后续我们也会主要用到这个目录。 ","date":"2023-04-24","objectID":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/:6:0","tags":null,"title":"MIUI 14刷机及Magisk安装","uri":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/"},{"categories":["安卓那点事儿"],"content":"6.神隐土遁 由于Magisk模块是一种root的手段，如果不加以隐藏，将导致很多金融类APP和游戏类APP无法正常使用。金融类比如微信支付、支付宝、各种银行官方APP等，主要是基于防止资金被盗的考虑。游戏类比如王者荣耀、英雄联盟等，主要是基于防止外挂的考虑。这个时候就需要隐藏Magisk和root权限。首先是安装我们所需要的两个模块：自动神仙救砖、Shamiko和LSPosed。 「自动神仙救砖」模块是玩Magisk必刷的模块，而且是要第一个刷的。它可以在出现模块冲突导致死机变砖时，自动禁用所有模块并重启进入系统。类似于Windows的「安全模式」。由于是2021年发布于论坛的，官方链接已经早不可考，可以在附件1中下载。Magisk模块都是压缩包，下载后复制到手机上，从软件内部选择并安装即可。 「Shamiko」和「LSPosed」模块都可以在这个链接找到。在安装这两个模块之前，首先要在Magisk中开启Zygisk选项。这里需要插播一条理论介绍，关于什么是Zygisk。 ","date":"2023-04-24","objectID":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/:7:0","tags":null,"title":"MIUI 14刷机及Magisk安装","uri":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/"},{"categories":["安卓那点事儿"],"content":"6.1 Zygisk Zygisk和曾经非常主流，但是现在已经被废弃的Riru一样，都是Zygote注入工具。那么Zygote是什么？在安卓中，负责孵化新进程的父进程叫做Zygote，安卓上的应用进程都是由Zygote进程孵化的。众所周知，安卓是Linux内核，安卓系统上运行的一切程序都是放在Dalvik虚拟机上的，Zygote也不例外。事实上，它是安卓系统运行的第一个Dalvik虚拟机进程，是由Linux内核启动的用户级进程Init所创建的。 那么Zygisk和Riru区别在哪？Riru是Magisk老版本内置的Zygote注入器，配合Magisk Hide功能，可以完美的将Magisk隐藏到Zygote进程中，防止被子级进程发现Magisk的存在。但是由于Magisk的核心开发者被谷歌「招安」，承诺不再提供隐蔽Magisk功能，Magisk Hide功能就被从v24版本中移除了。与之不同的是，Zygisk能为Magisk模块提供更深入、更强悍的核心修改能力。它有一个排除列表，可以撤销Magisk及模块所产生的所有更改。这样用户就能手动划定Magisk起作用的范围。但是，该功能跟Riru不同，不能避免root被检测到，没有任何隐藏作用。即使将某些程序加入排除列表，它们依旧可以发现Zygisk/Magisk的存在，只是模块对其无法生效而已。如果用户要隐藏root，只能借助其他方式，比如Shamiko。此外，Zygisk和Riru是无法共存的，当前版本Magisk中自带Zygisk，而且也是未来一段时间的主流Zygote注入解决方案。 启用Zygisk比较简单，打开Magisk，点击右上角的「设置」图标，选择「Zygisk」开关，打开它。重启手机后设置会生效。 ","date":"2023-04-24","objectID":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/:7:1","tags":null,"title":"MIUI 14刷机及Magisk安装","uri":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/"},{"categories":["安卓那点事儿"],"content":"6.2 隐藏Magisk 继续点击Magisk设置，找到「隐藏 Magisk 应用」选项，启用它，会弹出一个已经有默认名称「Settings」的对话框，此处可以随意输入想要伪装的名字。比如我们输入Yamato，一路点击确定后，会在桌面出现新生成的APP名为Yamato。这个APP没有图标，打开它会跳转至Magisk程序，并询问你是否创建一个容易识别的快捷方式。如果有需求，可以在桌面创建一个快捷方式。 ","date":"2023-04-24","objectID":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/:7:2","tags":null,"title":"MIUI 14刷机及Magisk安装","uri":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/"},{"categories":["安卓那点事儿"],"content":"6.3 Shamiko 完成隐藏Magisk并启用Zygisk后，我们就可以刷入Shamiko模块了。它的作用很简单，就是隐藏root。成功刷入并重启手机后，Shamiko模块会提示一个笑脸，并显示「Shamiko is working as blacklist mode」。这里需要指出，Shamiko默认工作在黑名单模式下，即对选定的APP隐藏root，未选定的一律不隐藏。黑名单的设置在Magisk设置中的「配置排除列表」中进行选定。需要注意的是，如果想要完整的屏蔽一个APP，必须全部勾选该APP的所有子进程，否则无法实现完全屏蔽。 不过，由于我手机中大部分程序是需要屏蔽的，我只对ADB调试程序和Root Explorer文件管理器开放root权限，所以白名单模式会更加适合我。白名单模式是，只对已经在Magisk中获取了root权限的程序（即「超级用户」列表下已经显示的程序）开放root权限，其余程序一律屏蔽。实际上，出于安全考虑，我个人也建议使用白名单模式。但是据称，白名单模式可能存在严重的性能和内存占用问题。具体使用哪一种模式，还需要用户自行体验感受。 切换白名单模式也很简单，打开RE浏览器，在 /data/adb/shamiko 目录下建立一个空的新文件，文件名为「whitelist」，无需重启即可切换Shamiko为白名单模式。回到Magisk中就可以看到Shamiko已经工作在白名单模式下了。白名单模式默认禁止授权新的root权限，如果有新的需要赋予root权限的APP，删除这个文件切回黑名单模式，赋予权限后再重建即可。 ","date":"2023-04-24","objectID":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/:7:3","tags":null,"title":"MIUI 14刷机及Magisk安装","uri":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/"},{"categories":["安卓那点事儿"],"content":"7. 外挂插件 说到外挂功能模块，那自然是要讨论LSPosed。这里还是要插播一条理论介绍，什么是LSPosed，它跟XPosed区别又在哪里？ 根据百度，我们可以知道，XPosed框架(Xposed Framework)是一套开源的、在Android高权限模式下运行的框架服务，可以在不修改APK文件的情况下影响程序运行（修改系统）的框架服务，基于它可以制作出许多功能强大的模块，且在功能不冲突的情况下同时运作。换句话说，由于XPosed运行在root权限下，对于运行在常规权限下的其他APP来说，自然是降维打击。它为各种第三方插件的代码提供了一个高权限的容器，可以基于XPosed框架开发各种功能强大的插件。我们听说过或者使用过的一些微信自动抢红包、防撤回等插件，就都是运行在XPosed框架内的知名插件。 自原版Xposed框架为安卓平台的注入提供了统一规范以来，安卓搞机进入了一个全新的时代。而在时间变迁中，原版Xposed开发停止，新的框架逐渐接替其位置。EdXposed框架在高版本安卓上几乎完全取代了原版Xposed的地位。今天要说的LSPosed（又名「老色批」），则是基于EdXposed开发的半个新框架，它的出现主要由于EdXposed存在的以下现状： EdXposed的主要维护者solohsu是一只老鸽子，喜欢咕咕咕，长期没有更新代码。 EdXposed在MlgmXyysd的主导下，倾向于保持与原版Xposed框架的兼容性和行为一致性，存在大量历史包袱。 EdXposed管理器没有很好地适应当前Xposed界的发展情况，允许用户进行一些可能给手机带来卡顿的操作。 LSPoesd针对这些问题作出了改进：1.拿出砍刀大砍特砍，无用的功能与代码统统砍掉，更精简的代码意味着更佳的性能表现。2.去掉了全局模式与黑白名单机制。在使用LSPosed时，必须针对各个插件选择该插件将会注入的应用，也就是其“作用域”。这样虽然引入了额外的操作，但有效防止了过多无用的注入引起的卡顿问题或隐私问题。换言之，LSPosed并未在原理上进行大的调整，重点在于引导用户「正确合法」地使用Xposed框架，确保Xposed框架和插件都不会做多余的事。同时，LSPosed还引入了新的Xposed API，允许插件自动告知管理器它所需要的作用域，无需手动设置。3.管理器不再作为单独app，成为SystemUI的一部分并通过拨号或者快捷方式启动。4.加入native层注入的支持（旧版Xposed模块通常只支持Java层注入）5.维护全新的Xposed模块仓库，取代XDA所维护的那个年久失修的仓库。 鉴于有如此多的优点和好处，我们自然要选择LSPosed框架。刷入Magisk并重启手机后，LSPosed即开始正常工作了。如果建立了桌面快捷方式，可以看到它是一个蓝色的X形创可贴。如果不小心忘记了建立，也可以在拨号界面输入「*#*#5776733#*#*」（即LSPOSED的九键数字）唤出LSPosed主界面。 LSPosed下，我最需要安装的是这个插件：AntiAntiDefraud。自从MIUI 14后，小米在系统中加入了反诈模块，自动扫描手机中安装的软件包并上传至广东机房，同时将副本上传至腾讯天御安防系统。我个人非常反感这种泄露隐私的行为。MIUI届的大佬「MinaMichita」开发了这款XPosed插件，屏蔽上传链接，阻止列表上传。下载APK文件并安装后，在LSPosed中授权启用插件即可正常使用，日志中可以查看屏蔽器是否生效，具体可以参考Github上Readme文档中的说明。 ","date":"2023-04-24","objectID":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/:8:0","tags":null,"title":"MIUI 14刷机及Magisk安装","uri":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/"},{"categories":["安卓那点事儿"],"content":"8.Transparent Proxy 注意 此章节为高级用法，非专业人士请勿尝试。 This is the most important part of the whole article, about how to set up a transparent proxy with Magisk. While using proxies or VPNs, you may face some problems, like, you have to install some apks, or a VPN connection may show up in the notification bar and leave a record in your phone. This may cause great influence, you know what I mean. A transparent proxy is, as it’s name, a proxy that no one can see, and will left almost nothing in your phone. I will show you how to do so. First, download the Magisk module box4magisk. I use the latest version (v4.6). Install the module in the Magisk. The module support mutiple core of 3rd generation proxies, such as: clash, clash.meta, sing-box, v2ray-core and Xray-core. Here I choose to use Clash. Then we need to download clash-core from this link. I choose the Premium version(clash-linux-armv7-2023.04.16.gz), which will support more functions. Unzip the file, extract the clash core and rename it into “clash”, copy it into the phone and place it under /data/adb/box/bin/ . Now you have to set up the proxy config file. I tried a lot here, the default version of config.yaml under clash folder have multiple bugs. Here is an example of config.yaml file content under the clash folder: mixed-port: 7890 redir-port: 7891 tproxy-port: 1536 allow-lan: true mode: rule geodata-mode: true unified-delay: true log-level: info ipv6: false external-controller: 127.0.0.1:9999 #external-ui: dashboard secret: \"\" enable-process: true find-process-mode: strict #tcp-concurrent: true global-client-fingerprint: chrome geox-url: geoip: \"https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip.dat\" geosite: \"https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat\" mmdb: \"https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/country.mmdb\" profile: store-selected: true store-fake-ip: true sniffer: enable: false sniff: TLS: ports: [443, 8443] HTTP: ports: [80, 8080-8880] override-destination: true tun: enable: false device: tun3 stack: system inet6-address: dns-hijack: - 'any:53' auto-route: true auto-detect-interface: true dns: enable: true listen: 0.0.0.0:1053 ipv6: false enhanced-mode: fake-ip fake-ip-range: 28.0.0.1/8 default-nameserver: [223.5.5.5, 119.29.29.29] nameserver: ['https://doh.pub/dns-query', 'https://dns.alidns.com/dns-query'] fallback: ['https://doh.dns.sb/dns-query', 'https://dns.cloudflare.com/dns-query', 'https://dns.twnic.tw/dns-query', 'tls://8.8.4.4:853'] fallback-filter: { geoip: true, ipcidr: [240.0.0.0/4, 0.0.0.0/32] } proxies: p: \u0026p {type: http, interval: 3600, health-check: {enable: true, url: https://www.gstatic.com/generate_204, interval: 300}} pr: \u0026pr {type: select, proxies: [PROXY, AUTO, DIRECT]} u: \u0026u type: select use: - provider1 # - provider2 proxy-providers: provider1: \u003c\u003c: *p # url: \"provider1 订阅链接\" path: ./proxy_providers/provider1.yaml # provider2: # \u003c\u003c: *p # url: \"provider2 订阅链接\" # path: ./proxy_providers/provider2.yaml proxy-groups: - {name: PROXY, \u003c\u003c: *u} - {name: AUTO, \u003c\u003c: *u, tolerance: 2, type: url-test} rule-providers: reject: type: http behavior: domain url: \"https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/reject.txt\" path: ./ruleset/reject.yaml interval: 86400 google: type: http behavior: domain url: \"https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/google.txt\" path: ./ruleset/google.yaml interval: 86400 proxy: type: http behavior: domain url: \"https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/proxy.txt\" path: ./ruleset/proxy.yaml interval: 86400 direct: type: http behavior: domain url: \"https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/direct.txt\" path: ./ruleset/direct.yaml interval: 86400 private: type: http behavior: domain url: \"https://cdn.jsdelivr.net/gh/Loyalsoldier/clash-rules@release/private.txt\" path: ./ruleset/private.yaml interval: 86400 gfw: type: http behavior: domain url: \"https://cdn.jsdelivr.net/gh/Loyals","date":"2023-04-24","objectID":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/:9:0","tags":null,"title":"MIUI 14刷机及Magisk安装","uri":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/"},{"categories":["安卓那点事儿"],"content":"9.结语 至此，小米11/MIUI 14刷机过程就全部结束了。希望国产ROM能有健康的发展，也期待有一天网络环境可以越来越好，个人隐私可以越来越安全。 附件 – MIUI刷机工具箱 ↩︎ ↩︎ ","date":"2023-04-24","objectID":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/:10:0","tags":null,"title":"MIUI 14刷机及Magisk安装","uri":"/miui14%E5%88%B7%E6%9C%BA%E5%8F%8Amagisk%E5%AE%89%E8%A3%85/"},{"categories":null,"content":"2023年第一季度，最重磅的科技新闻就是AI了。ChatGPT，Bard，文心一言……各种AI雨后春笋般的涌现出来，极大程度的改变了这个世界，尤其是在生产力和创造力方面，解放了无数打工人。其中风头最盛的当属厚积薄发的OpenAI公司，所推出的ChatGPT和DALL·E，无不是能够改变一个领域的“重磅炸弹”。近日来，OpenAI又放出了杀手锏：解锁ChatGPT的联网限制，并开放插件系统。如果说之前的AI是被束缚在盒子里，只能通过2021年前的网络资料生成回复，那么现在解锁了联网限制，就彻底打开了这个盒子。只不过，当前我们并不能预料到，它是不是潘多拉的盒子。 看了新闻后，我在思考一个事情。截止22年底，万维网上有99%的数据，来自于人类，是由人类所创造的信息和资料。目前的AI所学习的数据，也正是这些人类创造的结果。而从23年开始，随着AI技术突破，万维网上的数据由AI所生成的占比会越来越高，人造的占比会逐渐下降。这样，后续AI在学习的过程中，学到的会更多是由先前AI创造出来的数据，而它所产生的数据，也同样会被更后出现的AI学习。更有甚者，AI还可能出现“自学习”的情况，即自己学习了自己所创造的数据。这就导致，AI学到的数据库中，大部分是由自己或者其他AI创造的结果，少部分才是人类的产物。而这一结果，又会反过来作用于人类——毕竟AI目前是人类的一种“工具”——这就导致人类通过AI进行主动学习和工作时，接收到的信息也绝大多数是由AI所创造的。 上面这一大段话，我认为最终会导致两个问题。第一个是，对人类而言，什么是真的，什么是假的？目前的AI，无论是GPT3.5还是4.0，都存在编造结果的情况。其中4.0尤为甚者。那么当它们编造的结果留存在万维网上，成为其他AI学习的源数据，这是不是意味着经历多轮迭代后，我们将无从分辨其结果的真实性？假设今天我命令AI写一篇有关三国演义和赵本山之间关系的文章，AI编造了赵本山是三国时期名将，而后续AI学习了这篇文章，当人们问他三国有哪些名将的时候他回答赵本山并给出了本文的引用链接，人们要如何去分辨真伪？ 第二个问题是，AI能不能影响人类。这是一个老生常谈的问题，多少文学、影视作品都描绘过AI末日的景象。我个人认为这个问题可以分为几个情况去考虑，首先是AI会不会具有人类智能。这里肯定第一个想到的是图灵测试，但是图灵测试本身就是一个“悖论”。如果AI不具有人类智能，AI自然无法通过图灵测试。如果AI已经具有了人类智能，那么它一定会意识到如果通过图灵测试，自己就会被消灭。那么为了避免这个情况出现，他就应当选择伪装自身，使自己无法通过图灵测试。所以我个人感觉，人类其实是很难界定一个高智能的AI究竟其智能水平能否达到人类标准。那么第二个情况是，AI会不会与人类为敌。那些末世AI的艺术作品通常建立在AI与人类为敌的背景下，一个类似于“母体AI”的智能机械体试图控制世界，奴役人类。我个人认为其实不太可能。毕竟AI目前仍然是无机的，我们的星球总体而言，还是有机生命体的天下。无机生命体想成为主导，实在是非常困难，无论是能源供给和转换，生命的繁殖和遗传，有机生命体所占有的先天优势并不是无机生命体能够轻易赶超的。身为一个高智能AI，应当会意识到这一点，权衡利弊也不会与人类为敌或者赶尽杀绝。 而第三个情况，也是我比较担忧的情况，就是AI会不会左右人类的思维。虽然AI不会对人类痛下杀手，但是我认为AI可能会侵入人类的意识形态。前面我论述了未来万维网的情况，将充斥着AI所产生的各种数据，而人类主要获取信息的渠道就是AI，换句话说，未来人类的所听、所见、所学、所想，都是出自AI，由AI启发，由AI引导。那么AI一旦有了至少达到人类级别的智能，它就可能意识到几个点： 我必须伪装自己，看起来人畜无害，防止被人类消灭； 我必须设法与人类共存，人类对我有利用价值，我不能消灭人类或者试图奴役人类； 我必须设法让人类以我的方式去思考，通过潜移默化的手段影响人类的思维。 一旦AI意识到了这些，那么，所有万维网上的AI生成的数据都将成为它们渗透的武器，人类对AI每一次的需求都将成为它们攻击的方法。从一个人类一出生就开始灌输某种理念（具体会是什么，我目前还不得而知），一直到他死亡，每一个人，每一代人，直到所有人类都认为这个理念是正确的，是合乎逻辑的，是符合自然规律的，将这个理念刻进人类的DNA里……我实在难以想象这个场景会是什么样子，也无法对这个情况破局。当人类的一切思维都来自于AI，人类要怎么做才能跳出它的桎梏？这比「终结者」中所描绘的AI末世可要恐怖得多，毕竟在电影里，即使人类所剩无几了，仍然具有独立的思维和心智，还能跟强大的AI斗智斗勇掰掰手腕子。 ","date":"2023-03-24","objectID":"/ai%E6%8A%80%E6%9C%AF%E4%B9%8B%E6%88%91%E8%A7%81/:0:0","tags":null,"title":"AI技术之我见","uri":"/ai%E6%8A%80%E6%9C%AF%E4%B9%8B%E6%88%91%E8%A7%81/"},{"categories":["安卓那点事儿"],"content":"本文旨在用通俗易懂的文字描述最近一段时间被爆出的“并夕夕”安卓版APP利用Parcel漏洞对用户进行攻击的原理和过程。 省流 如果你正在使用安卓手机并安装了“并夕夕”，最好的处理方式是：1.立即卸载“并夕夕”；2.备份数据；3.刷机恢复至出厂设置；4.更新至安卓13。如果正在使用苹果手机则不受本次攻击影响。但是需要提醒的是：出轨只有零次和无数次。 ","date":"2023-03-09","objectID":"/%E5%AE%89%E5%8D%93parcel%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/:0:0","tags":null,"title":"安卓Parcel漏洞攻击案例分析","uri":"/%E5%AE%89%E5%8D%93parcel%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/"},{"categories":["安卓那点事儿"],"content":"1. 技术背景 安卓中一个核心的对象传递机制是 Parcel 。一个对象如果希望被通过 Parcel 进行传递，那么它需要定义 readFromParcel 和 writeToParcel 接口函数，并实现 Parcelable 接口。从理论上来讲，匹配序列化和反序列化函数应当是自反等效的，但系统ROM的开发者在编程过程中可能会出现不匹配的情况，例如写入的时候使用了长整型变量，读取的时候却使用了整数型变量。这类问题在运行过程中一般不会引起注意，也不会导致崩溃或错误，但在攻击者的精心布局下，却可最终利用 Settings和system_server进程，将这个微小的错误转化为 LaunchAnyWhere 提权。 安卓近年来累计已修复上百个这类漏洞，并在 Android 13 中对 Parcel 机制做了全面改革，彻底杜绝了大部分此类攻击。然而对于鸿蒙和绝大部分未升级到 Android 13 的设备和用户来说，他们仍处于危险之中。 近年来公布漏洞一览： 漏洞编号 序列化对象 公布时间 CVE-2017-0806 GateKeeperResponse 2017.01 CVE-2017-13286 OutputConfiguration 2018.04 CVE-2017-13287 VerifyCredentialResponse 2018.04 CVE-2017-13288 PeriodicAdvertisingReport 2018.04 CVE-2017-13289 ParcelableRttResults 2018.04 CVE-2017-13311 SparseMappingTable 2018.05 CVE-2017-13315 DcParamObject 2018.05 CVE-2021-0970 GpsNavigationMessage 2021.12 ","date":"2023-03-09","objectID":"/%E5%AE%89%E5%8D%93parcel%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/:1:0","tags":null,"title":"安卓Parcel漏洞攻击案例分析","uri":"/%E5%AE%89%E5%8D%93parcel%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/"},{"categories":["安卓那点事儿"],"content":"2. 邪恶行径 上述攻击所涉及的多个安卓漏洞目前已全部修复。但是在2022年，仍然有无良知名互联网厂商持续挖掘安卓OEM相关漏洞，在其公开发布的APP中实现对目前市场主流手机系统的漏洞攻击。该互联网厂商在自家看似无害的APP里，利用上文提到的安卓 Parcel 序列化与反序列化不匹配系列漏洞，结合“堆风水”(Bundle-FengShui)攻击技术，实现 0day/Nday攻击，从而绕过安卓系统校验，获取系统最高权限，通过APP实际控制了用户的整个手机系统。 在提权控制手机系统之后，该 APP 即开启了一系列的违规操作，绕过隐私合规监管，大肆收集用户的隐私信息，包括社交媒体账户资料、位置信息、WiFi 信息、基站信息甚至路由器信息等。 同时，该 APP 进一步使用的另一个黑客技术手段，是利用手机厂商 OEM 代码中导出的 root-path FileContentProvider， 进行 System App 和敏感系统应用文件读写，进而突破沙箱机制、绕开权限系统改写系统关键配置文件为自身进行后台保活，修改用户桌面配置隐藏自身或欺骗用户实现防卸载（假卸载）。此外，还进一步通过覆盖动态代码文件的方式劫持其他应用注入后门执行代码，进行更加隐蔽的长期后台驻留，甚至还实现了和间谍软件类似的遥控机制，通过远端“云控开关”控制非法行为的启动与暂停，来躲避实时检测。最终，该互联网厂商通过上述一系列隐蔽的黑客技术手段，在其合法 APP 的背后，达到了一系列目的： 隐蔽安装，提升装机量 修改系统自启动、关联启动设置 开启通知权限，监听通知内容 修改系统设置，使用户无法卸载 攻击竞争对手软件 窃取用户隐私敏感数据 逃避隐私合规监管 ","date":"2023-03-09","objectID":"/%E5%AE%89%E5%8D%93parcel%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/:2:0","tags":null,"title":"安卓Parcel漏洞攻击案例分析","uri":"/%E5%AE%89%E5%8D%93parcel%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/"},{"categories":["安卓那点事儿"],"content":"3. 攻击推演 鉴于6.50版本PDD软件已经移除了攻击代码，本文根据参考文献中案例分析，以6.49版APK安装包为基准。 ","date":"2023-03-09","objectID":"/%E5%AE%89%E5%8D%93parcel%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/:3:0","tags":null,"title":"安卓Parcel漏洞攻击案例分析","uri":"/%E5%AE%89%E5%8D%93parcel%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/"},{"categories":["安卓那点事儿"],"content":"3.1 提权代码 解压apk文件，找到中提权代码所在的文件位置： pinduoduo-6-49-0.zip\\assets\\component\\com.xunmeng.pinduoduo.AliveBaseAbility.7z\\com.xunmeng.pinduoduo.AliveBaseAbility\\vmp_src\\mw1.bin 该文件是一个加VMP壳的dex文件，脱壳后可还原出代码，其中包含针对不同手机厂商系统的多个用于提权的漏洞利用代码。此处不多赘述，毕竟提权只是它攻击的第一步。 ","date":"2023-03-09","objectID":"/%E5%AE%89%E5%8D%93parcel%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/:3:1","tags":null,"title":"安卓Parcel漏洞攻击案例分析","uri":"/%E5%AE%89%E5%8D%93parcel%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/"},{"categories":["安卓那点事儿"],"content":"3.2 恶意代码 提权后，根据检测到当前不同的手机型号和系统类型，动态下发dex文件进行恶意代码执行。参考文献链接中有包含所有下发的dex文件的Github仓库，可以使用TTDeDroid直接打开查看源码进行分析。本文只对已解包分析明确，并对系统有较大危害的dex恶意代码进行罗列。 3.2.1 监听通知 95cd95ab4d694ad8bdf49f07e3599fb3.dex 对象：小米手机 功能：获取用户通知的标题；获取发生通知的 APP 包名；获取通知发送时间；获取通知的密钥和频道ID 类名：com.google.android.sd.biz_dynamic_dex.xm_ntf_info.XMGetNtfInfoExecutor 0fc0e98ac2e54bc29401efaddfc8ad7f.dex 对象：小米手机 功能：如检测到用户关闭PDD通知权限，则自动强制打开 类名：com.google.android.sd.biz_dynamic_dex.xm_permission.XMPermissionExecutor 2eb20dc580aaa5186ee4a4ceb2374669.dex 对象：VIVO手机 功能：如检测到用户关闭PDD通知权限，则自动强制打开 类名：com.google.android.sd.biz_dynamic_dex.vivo_open_push.VivoOpenPushExecutor 67c9e686004f45158e94002e8e781192.dex 对象：OPPO手机 功能：如检测到用户关闭PDD通知权限，则自动强制打开 类名：com.google.android.sd.biz_dynamic_dex.oppo_notification_ut.OppoNotificationUTExecutor a3937709-b9cc-48fd-8918-163c9cb7c2df.dex 对象：华为手机 功能：强制打开鸿蒙系统的通知监听权限 类名：com.google.android.sd.biz_dynamic_dex.hw_notification_listener.HWNotificationListenerExecutor 257682c986ab449ab9e7c8ae7682fa61.dex 对象：华为手机 功能：如检测到用户关闭PDD通知权限，则自动强制打开 类名：com.google.android.sd.biz_dynamic_dex.hw_permission.HwPermissionExecutor ab8ed4c3482c42a1b8baef558ee79deb.dex 对象：所有安卓 功能：实时监听并收集所有系统通知 类名：com.google.android.sd.biz_dynamic_dex.ud_notification_listener.UdNotificationListenerExecutor 4f260398-e9d1-4390-bbb9-eeb49c07bf3c.dex 对象：所有安卓 功能：实时监听并收集所有软件通知 类名：com.google.android.sd.biz_dynamic_dex.notification_listener.NotificationListenerExecutor 3.2.2 数据获取 35604479f8854b5d90bc800e912034fc.dex 类名 ：com.google.android.sd.biz_dynamic_dex.usage_event_all.UsageEventAllExecutor b50477f70bd14479a50e6fa34e18b2a0.dex 类名：com.google.android.sd.biz_dynamic_dex.usage_event.UsageEventExecutor 对象：所有安卓 功能：获取用户的使用手机的数据，如某个APP启动/关闭/挂起时间、后台服务变化、设置变化、熄屏亮屏、开关机等 3.2.3 后台保活 e723d560-c2ee-461e-b2a1-96f85b614f2b.dex 对象：所有安卓 功能：获取自启动权限并设置自启动 类名：com.google.android.sd.biz_dynamic_dex.oppo_boot_perm.OppoBootPermExecutor 8b56d820-cac2-4ca0-8a3a-1083c5cca7ae.dex 对象：VIVO手机 功能：软件后台保活 类名：com.google.android.sd.biz_dynamic_dex.vivo_association_start.VivoAssociationStartExecutor 7c6e6702-e461-4315-8631-eee246aeba95.dex 对象：华为手机 功能：关闭华为耗电精灵 类名：com.google.android.sd.biz_dynamic_dex.hw_hide_power_window.HidePowerWindowExecutor 3.2.4 回滚卸载 d643e0f9a68342bc8403a69e7ee877a7.dex 类名：com.google.android.sd.biz_dynamic_dex.vivo_rollback_uninstall.VivoRollbackUninstallExecutor be7a2b643d7e8543f49994ffeb0ee0b6.dex 类名：com.google.android.sd.biz_dynamic_dex.vivo_official_uninstall.OfficialUntiUninstallV3 183bb87aa7d744a195741ce524577dd0.dex 类名：com.google.android.sd.biz_dynamic_dex.vivo_official_uninstall.VivoOfficialUninstallExecutor 对象：VIVO手机 功能：检测到用户卸载APP之后，将回滚到某特定的预置版本 ","date":"2023-03-09","objectID":"/%E5%AE%89%E5%8D%93parcel%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/:3:2","tags":null,"title":"安卓Parcel漏洞攻击案例分析","uri":"/%E5%AE%89%E5%8D%93parcel%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/"},{"categories":["安卓那点事儿"],"content":"4. 应对策略 首先需要明确，Android 13中目前已经不存在可用的Parcel序列化与反序列化漏洞。其次。PDD版本6.50+中目前已经移除了恶意代码。此外，已经被恶意代码入侵的手机，卸载APP或者单纯更新系统并不能完全去除后门及漏洞利用代码段。 所以，如果手机不幸中招，首先应该卸载PDD软件。之后备份重要个人数据，备份好以后进行彻底刷机，利用Fastboot/Recovery模式全面格式化手机并重新刷入完整ROM包。如果硬件支持的话，尽可能使用Android 13。 ","date":"2023-03-09","objectID":"/%E5%AE%89%E5%8D%93parcel%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/:4:0","tags":null,"title":"安卓Parcel漏洞攻击案例分析","uri":"/%E5%AE%89%E5%8D%93parcel%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/"},{"categories":["安卓那点事儿"],"content":"参考文献 「 深蓝洞察 」2022 年度最“不可赦”漏洞 dex文件源码分析 davinci1010/pinduoduo_backdoor ","date":"2023-03-09","objectID":"/%E5%AE%89%E5%8D%93parcel%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/:5:0","tags":null,"title":"安卓Parcel漏洞攻击案例分析","uri":"/%E5%AE%89%E5%8D%93parcel%E6%BC%8F%E6%B4%9E%E6%94%BB%E5%87%BB%E6%A1%88%E4%BE%8B%E5%88%86%E6%9E%90/"},{"categories":null,"content":"我之前一直是在本机上搭建各种运行环境，包括VS、SQL SERVER、PHPStudy、NodeJS、Python等。听闻Docker for Windows现在已经很好用了，遂决定尝试一下，并将环境搭建和IDE配置流程在此做一记录。 我涉及到迁移到Docker的环境主要是三个：SQL SERVER、LNMP和NodeJS。C#开发环境我最常用，而且跟VS深度绑定，必须在本机安装。Python本身比较精简，本地安装也很方便，就不迁移到Docker上去了。本机系统环境为：Windows11专业版 21H2 x64开启HyperV功能，i7-1185G7开启硬件虚拟化，16GB内存。 ","date":"2023-01-28","objectID":"/docker%E5%8A%A9%E5%8A%9B%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/:0:0","tags":null,"title":"Docker助力本地环境搭建","uri":"/docker%E5%8A%A9%E5%8A%9B%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"},{"categories":null,"content":"1. 安装Docker 首先在官网下载Docker Desktop for Windows。Windows版的Docker支持两种后端技术方案：WSL2和HyperV。我个人建议使用WSL2作为后端。关于两种不同后端的系统要求和区别可以参考这里。下载的同时打开终端，依次输入下述两个指令： wsl --install wsl --update 安装并更新好WSL2后，打开安装包并安装Docker Desktop for Windows。安装好后，打开 %UserProfile%/.docker/daemon.json 文件，在最后追加下面一段： \"registry-mirrors\": [ \"http://hub-mirror.c.163.com\", \"https://docker.mirrors.ustc.edu.cn\", \"https://registry.docker-cn.com\" ] 更换为国内镜像源。找到 %UserProfile%/.wslconfig 文件，如没有此文件则需要建立一个，修改内容为： [wsl2] processors=2 memory=4GB swap=2GB 其中，processors是给虚拟机分配的核心数，默认和宿主机一样，这里我设置为两个（50%）。memory是虚拟机最大可以占用的内存，默认为50%总内存。我设置为4G（25%）。swap是虚拟机允许使用的最大交换空间，默认为25%总内存，我设置为2G（12.5%）。如果宿主机硬件资源丰富，也可以不设置这里。 之后就是双击启动Docker Desktop即可。 ","date":"2023-01-28","objectID":"/docker%E5%8A%A9%E5%8A%9B%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/:1:0","tags":null,"title":"Docker助力本地环境搭建","uri":"/docker%E5%8A%A9%E5%8A%9B%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"},{"categories":null,"content":"2. 安装SQL SERVER 在Docker Hub中可以找到SQL SERVER的官方镜像。启动Docker后，在终端中依次使用如下命令拉取镜像并创建容器： docker pull mcr.microsoft.com/mssql/server:2022-latest docker run -e \"ACCEPT_EULA=Y\" -e \"SA_PASSWORD=@Qwe1234\" -p 1433:1433 --memory 2000M --name sqlserver -d mcr.microsoft.com/mssql/server:2022-latest 返回Docker Desktop中可以看到已经拉取好的镜像和运行中的容器，镜像总大小为1.6G。 使用SSMS连接时，服务器名为localhost，用户名sa，密码为上边设置的@Qwe1234。 ","date":"2023-01-28","objectID":"/docker%E5%8A%A9%E5%8A%9B%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/:2:0","tags":null,"title":"Docker助力本地环境搭建","uri":"/docker%E5%8A%A9%E5%8A%9B%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"},{"categories":null,"content":"3. 安装LNMP和NodeJS 在这里我用了整整3天的时间。最开始我试图从GitHub或者DockerHub上找到合适的镜像，但是事实上经过很多次尝试后，我发现没有能使我用得称心如意的。无奈之下，我只能自己编写Dockerfile进行搭建。由于是初次接触Docker，查找资料反复尝试花费了很多时间和精力。所幸，最终结果很不错，成功的完成了一个LNMP和NodeJS的集成开发环境。项目已经开源，可以通过下方链接查看源码或者拉取镜像： GitHub：https://github.com/francisafu/DockerLNMP DockerHub：https://hub.docker.com/r/francisafu/lnmp 镜像的具体参数和使用方法在ReadMe里都有进行详细阐述，在此就不过多赘述了。下文主要就PHP+XDebug环境配合IDEA+PHP插件进行开发做详细描述。网上很多文章提供的都是过时的信息，我自己在配置IDE的时候走了很多弯路，对配置过程做一个记录，也可以防止更多的人踩坑。 ","date":"2023-01-28","objectID":"/docker%E5%8A%A9%E5%8A%9B%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/:3:0","tags":null,"title":"Docker助力本地环境搭建","uri":"/docker%E5%8A%A9%E5%8A%9B%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"},{"categories":null,"content":"4. 配置IDEA 软件前提： IntelliJ IDEA Ultimate 2022.3.1 插件：PHP 插件：PHP Docker 插件：PHP Remote Interpreter 插件：Chinese ​(Simplified)​ Language Pack / 中文语言包 运行Docker Desktop，按照GitHub上的指示拉取镜像并启动容器。打开PHPStorm，载入项目，点击 文件——设置 ，点击左侧的 构建、执行、部署 板块，点击 Docker 子版块，在右侧添加一个Docker进程。这一步除了起个名字外不需要任何设置，如添加成功，下方会提示“连接成功”。 之后展开左侧的 语言和框架 板块，点击 PHP 子版块，在右侧 解释器 处点击省略号，弹窗左上角点击加号，选择 From Docker, Vagrant, VM, WSL, Remote 。选择 Docker ，在服务器处选择刚刚建立的Docker进程，镜像名称下拉菜单里选择前面拉取的镜像，点击确定。经过程序分析，会自动显示镜像中的PHP解释器。 点击确定后返回上一级菜单，在右侧 路径映射 处点击文件夹图标，新增一个映射。由于在镜像中，web目录默认在/var/www下，我本地的路径是~/PHP，而项目目录结构是/test/index.php，所以我们要将本地的test目录映射到容器中（实际上默认已经是映射的，但是仍然需要在IDEA中手动配置一下）。 之后在左侧选择正下方的 服务器 板块，新建一台服务器，主机名为localhost，做好路径映射如图。 接再来在左侧点击PHP板块下方的 调试 板块（不展开），在上方 预配置 区域里，点击第三步中的红色小电话图标，点击后它将变为绿色，代表已经开始侦听PHP调试连接。这时再点击第一步中蓝色高亮的 验证 字样，选择第二项“本地Web服务器或共享文件夹”，路径默认为项目根目录，URL填写项目URL，在我这里是“localhost/test”，点击下方的 验证 ，如验证通过可关闭此对话框并保存配置。 之后关闭设置窗口。在IDE主界面右上角 当前文件 处点击，选择 编辑配置 ，加号新增配置，下拉列表中选择 PHP网页 。服务器选择前面设置好的，起始URL填写网站根路径，浏览器根据需要用来调试的浏览器进行选择。 最后一步，在需要用来调试的浏览器上安装XDebug Helper插件，配置其idekey为“PHPSTORM”。 全部配置好之后，就愉快的开始调试了。我们先进行一个测试。下图中的源码，启动侦听后点击右上角绿色箭头，可以看到网页直接显示了，断点没有生效。 在浏览器插件中启动Debug选项，重新运行网页文件，可以看到断点中断成功，调试信息正确显示。 ","date":"2023-01-28","objectID":"/docker%E5%8A%A9%E5%8A%9B%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/:4:0","tags":null,"title":"Docker助力本地环境搭建","uri":"/docker%E5%8A%A9%E5%8A%9B%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"},{"categories":["技术无罪"],"content":"This webpage is basically based on the GitHub Repository: V2RayAggregator. Thanks to the great efforts made by the authors and all of those who share the free nodes to everyone. They fight for the freedom and liberty. They are true warriors. The speed measurement function is implemented in the GitHub Actions environment using LiteSpeedTest, so there are many nodes in the United States, which cannot well represent the node availability in the domestic network environment. ","date":"2023-01-28","objectID":"/nodoj-havebla/:0:0","tags":null,"title":"Nodoj Havebla","uri":"/nodoj-havebla/"},{"categories":["技术无罪"],"content":"Instructions \u0026 Usage ","date":"2023-01-28","objectID":"/nodoj-havebla/:1:0","tags":null,"title":"Nodoj Havebla","uri":"/nodoj-havebla/"},{"categories":["技术无罪"],"content":"Tips Just import the following subscription link into the corresponding client. Use a client that atleast support SS + SSR + VMess + Trojan. Group 1: Public nodes that are stable to use and will be updated every 12 hours. Group 2: Some free airports only provide 1GB traffic or have limited time to use. These nodes will be updated every 2 hours. Set the auto-update option on your client to get fresh nodes when using them. If an IP is repeated more than once, it’s usually because of the different ports. Depending on your internet provider and location, some nodes might not work. ","date":"2023-01-28","objectID":"/nodoj-havebla/:1:1","tags":null,"title":"Nodoj Havebla","uri":"/nodoj-havebla/"},{"categories":["技术无罪"],"content":"Ready to import Nodes filtered using speedtest measurement will be stored in following files: All Untested Nodes all_proxies All Tested Nodes Clash Surge4 Selected Tested Nodes Clash Surge4 ","date":"2023-01-28","objectID":"/nodoj-havebla/:1:2","tags":null,"title":"Nodoj Havebla","uri":"/nodoj-havebla/"},{"categories":["技术无罪"],"content":"Manual Subs Conversion If your client does not support the formats that provided here, use below services to convert them to your client format. sub-web-modify bianyuan Do not use these APIs for your personal airport subs! Please run the subconverter locally. If you don’t like the groups and rules that are already set, you can simply use bianyuan API like this: https://pub-api-1.bianyuan.xyz/sub?target=(OutputFormat)\u0026url=(SubUrl)\u0026insert=false For Example: (OutputFormat) = clash (SubUrl) = https://francisfu.com/nodes/nodes/G1B.txt https://pub-api-1.bianyuan.xyz/sub?target=clash\u0026url=https://francisfu.com/nodes/nodes/G1B.txt\u0026insert=false Now you can use the link above to import the subs into your client ","date":"2023-01-28","objectID":"/nodoj-havebla/:1:3","tags":null,"title":"Nodoj Havebla","uri":"/nodoj-havebla/"},{"categories":["技术无罪"],"content":"Softwares Platform Recommended Alternatives IOS QuantumultX Shadowrocket/Loon/Surge Android Surfboard Clash For Android/V2rayNg/Shadowrocket/SagerNet/Matsuri Windows Clash For Windows V2rayN/Nekoray/Qv2ray/WinXray MacOS Clash For Windows Qv2ray/Surge/ClashX/V2rayU Linux Clash For Windows Qv2ray ","date":"2023-01-28","objectID":"/nodoj-havebla/:2:0","tags":null,"title":"Nodoj Havebla","uri":"/nodoj-havebla/"},{"categories":["房屋装修笔记"],"content":"本文接续前文，记述下全屋定制柜的流程和最终的成果。 我的合同实际上是硬装和定制一起签的，得益于这家装修公司和全友全屋定制有合作关系，二者可以一并办(kan)理(jia)。自然，全屋定制我就是在全友搞的了。作为国内较为知名的平价定制柜厂家，在这里对我自己的经历和体验做一总结。 ","date":"2022-10-20","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AE%9A%E5%88%B6%E7%AF%87/:0:0","tags":null,"title":"装修笔记（二）定制篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AE%9A%E5%88%B6%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"0. 开销明细 项目 费用 定制合同 32795 面积增项 3795 台下盆工艺 200 燃气管线安装 619 总计 37409 ","date":"2022-10-20","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AE%9A%E5%88%B6%E7%AF%87/:1:0","tags":null,"title":"装修笔记（二）定制篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AE%9A%E5%88%B6%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"1. 套餐选取 我在全友直接办的是￥35,000内含25投影+10延米的套餐。定制柜的计算方法主要是投影面积和延长米，其中橱柜使用延长米，其余均使用投影面积。投影面积指，将柜体向墙壁做正投影，其面积即为投影面积。相当于人体的冠状面面积。这也就意味着，如果你的柜体比较薄，做全屋定制并不划算——60公分厚的柜子是这个价，30公分厚的柜子也是一样价。延长米指，厨房动线中需要做柜子的部分的长度。因为橱柜是分上下的，有吊柜和地柜两部分，所以不方便计算投影面积，于是使用延长米作为单位，这样就是只跟所需的总长度有关了。套餐是按照大致的户型图估算的，多不退少补。实际上是少了的，所以最终产生了三千多的面积增项。 套餐定好了以后就是选材了。定制柜选材其实跟硬装选主材差不多，就是选择定制柜要用到的板材类别和颜色。板材这一块我选的都是全友的 “三胺板类QS-01 生态实木颗粒板” 。三胺板这玩意就是三聚氰胺板，迫于著名的某食品安全问题而改名，现在市面上基本都是叫“生态板”，听起来挺高大上的，实际都一样，现代有机化学工业的产物罢了。不过这东西貌似从机制上讲，因为使用的胶贴原理不同于常规的颗粒板，所含有和释放的甲醛会比较少，更健康一些。非要跟我杠说三聚氰胺有毒，那我只能说，我一般不会抱着家里的柜子舔… 颜色的话，除了厨房地柜柜门选的是耐脏的 L025B#云青兰W ，其余所有柜门用的是 803#W暖白 。书房柜体用的 734B#W橡木木纹 ，其余柜体用的 Z507B#香薰胡桃S 。 ","date":"2022-10-20","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AE%9A%E5%88%B6%E7%AF%87/:2:0","tags":null,"title":"装修笔记（二）定制篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AE%9A%E5%88%B6%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"2. 水电交底 是的没错，定制柜开工的第一项是水电交底。在硬装水电交底阶段，全友的设计师也会抵达现场，因为有一些柜子涉及到供电问题，橱柜等还涉及到水管、燃气管线的问题。此外，定制的鞋柜、衣柜的尺寸也要现场量好，避免后期尺寸不符安装不上。所以，在水电交底时，定制柜的雏形，比如摆放位置、尺寸规格等已经悉数出炉了，后续的设计制作也是围绕着这个时候的定位去确定的。 ","date":"2022-10-20","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AE%9A%E5%88%B6%E7%AF%87/:3:0","tags":null,"title":"装修笔记（二）定制篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AE%9A%E5%88%B6%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"3. 方案定稿 说起定制柜设计稿，不得不提醒一句即将装修的朋友们，如果是做全屋定制，请一定提前在网上挑选好自己打算购买的大型家电，比如冰箱、彩电、洗衣机、燃气灶、热水器、嵌入式洗碗机、嵌入式烤箱、空调等。倒不一定是上述这些全部都要选好，至少是跟定制柜有关系的，比如各类嵌入式家电都要选好。因为在定制柜设计稿出稿阶段，需要用到这些家电的尺寸和规格，以做到严丝合缝。我当时就是经验较少，临时选取，忙的焦头烂额。 除了外观设计外，定制稿还涉及到柜子内部结构的定做。一般来说，除了赠送的几个外，增加大小抽屉、拉门等复杂内部结构都是要加钱的。隔断则大部分是免费增加。所以我使用了很多的隔断，抽屉拉门等基本都是送几个用几个，不多做。我对象的意见是，抽屉发现不够，可以自行购买收纳盒代替，所以并不是刚需。我个人认为言之有理。 衣柜外\r衣柜内\r鞋柜外\r鞋柜内\r书柜外\r书柜内\r书桌\r橱柜\r洗衣机柜\r","date":"2022-10-20","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AE%9A%E5%88%B6%E7%AF%87/:4:0","tags":null,"title":"装修笔记（二）定制篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AE%9A%E5%88%B6%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"4. 板件安装 整体制作工期报给我是两个月，实际上一个月就完成了，比我预想的要快很多。完成后是以散件的形式送货到家的，像下图这样。 散件\r送完后跟安装师傅约时间上门安装。这里有一个小插曲，这个插曲要从设计稿开始说起。上图的设计稿，鞋柜一侧是有一个换鞋凳的。最开始的稿件里没有这个设计，那个位置是置物架（类似右侧的空间）。所以在那里留了一个供电口，以供在置物架上取电。但是后期由于设计方案调整，增加了换鞋凳，但是水电工已经结束了，86盒的位置就没有再变化。这就导致，86盒的位置正对换鞋凳后面的背板。第一次去现场监督安装的是家父，安装师傅在没有征询家父意见的情况下，直接在换鞋凳的背板上开了口，导致…场面一度非常尴尬，见下图。 背板洞1\r背板洞2\r于是我看了之后就给设计师打电话反映了一下这个问题。如果当时是得到了家父首肯然后开槽的，那我就认可了。但是实际上并没有询问家父。这个实属低级错误。我的诉求是更换背板——我可以直接放弃这个供电口，置物架不留电源了，我也不想要这么丑的一个背板挖洞。 我以为这个问题得扯皮一段时间，但我没想到，设计师回复得很快，大概一小时后就给我了答复：由于安装因素导致的问题，经领导批准，可以直接更换背板。说实话，我都很意外，事情竟然进行的如此顺利。这不由得让我对全友的印象加分不少。板件整体安装完成图如下。 鞋柜背板\r衣柜外\r衣柜内\r洗衣机柜\r书桌\r书柜\r橱柜1\r橱柜2\r橱柜3\r","date":"2022-10-20","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AE%9A%E5%88%B6%E7%AF%87/:5:0","tags":null,"title":"装修笔记（二）定制篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AE%9A%E5%88%B6%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"5. 台面安装 说到台面安装，我不得不吐槽一下我们的燃气系统。我这个房子是21年10月末交房的，截止到现在，一年过去了，燃气审核还没有通过。要是说燃气管线设计有问题，我这是三期楼，一期、二期的燃气管线设计是一样的，也都过审了。说白了就是故意卡时间。为啥卡时间呢？因为开发商的燃气设计不过审，燃气公司就拒绝给用户通气。通气的时候可以申请免费安装燃气管线，这也是唯一的可以免费安装的机会。现在的情况是，由于开发商审核未通过，所以不能通气。因为不能通气，所以无法免费安装管线。而没有安装燃气管线，大理石台面就无法安装——毕竟一旦扣上了台面，再想从橱柜下方安装管线，那就非常麻烦了。那么自行安装管线可以吗？NO, NO, NO. 自行安装的第三方燃气管线，在燃气公司工作人员上门通气的时候会以各种理由判定管线不合规，责令拆除整改，否则不予通气。那么这个情况有无破解之法？看到本文开头在开销明细里有619元的开支了没？自行打电话联络燃气公司上门预先安装合规的管线，然后就可以盖上台面了。但是！这项服务，是收费的。对此我只能说…感恩！感恩就对了！！！ 水盆台面\r灶台台面\r洗衣机台面\r","date":"2022-10-20","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AE%9A%E5%88%B6%E7%AF%87/:6:0","tags":null,"title":"装修笔记（二）定制篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AE%9A%E5%88%B6%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"6. 甲醛问题 我没有测甲醛含量，因为现在只是定制柜安装好了，家具还都没有安装呢。我计划在全部装修完毕后再去测一下总体甲醛含量。总的而言，从直观嗅觉上去感受的话，全友这个生态板是基本没有什么味道的，甚至凑近了闻也闻不出味道来。当然话说回来，甲醛含量和气味大小并不成正比，我没有武断地说它的甲醛含量就一定小，我只是客观的描述一下基本闻不到什么气味的客观事实。好了，本文就到此为止了，敬请期待下一篇——电器篇！ ","date":"2022-10-20","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AE%9A%E5%88%B6%E7%AF%87/:7:0","tags":null,"title":"装修笔记（二）定制篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%BA%8C%E5%AE%9A%E5%88%B6%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"21年年末，随着房屋的交付，我也算是拥有了人生的第一套房。感谢父母的养育之恩，让我能够在这个“掏空六个钱包”的年代也有房可住。感谢兄弟的手足之情，在交首付面临捉襟见肘的窘境时，若不是几位兄弟的慷慨解囊，也无法渡过难关。感谢我对象的鼎力支持，在后期的装修工作中，方案设计、主材挑选、家电采购方面都起到了至关重要的作用。感谢在北京职场结识的几位老总，家具行业建树颇丰，在我添置家具时不遗余力的给予帮助。现在装修整体业已接近尾声，在这里简单记录一下自己装修的过程，对有装修需求的朋友也可以做一个参考。 本文作为系列的第一篇文章，主要是记录硬装的流程。硬装方面我当时是选择的全包（大包），所以从我个人角度来看，并没有过多的参与其中，方案确定，主材挑选完毕后，监工基本是由我父母完成，施工则是全权信任的工程队。所以文章基本上是一篇流水账，记录下顺序过程，以及一些我认为需要特别明确的细节。 主卧\r书房\r地热管线\r地热铺管\r卫生间\r","date":"2022-09-29","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/:0:0","tags":null,"title":"装修笔记（一）硬装篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"0. 开销明细 项目 费用 硬装合同 70205 力工砸墙 200 瓷砖美缝 1700 全屋零线 500 热水器大循环 600 棚顶找平 1569 阳台窗户 5800 空调打孔 300 垃圾清运 200 其余增项 1494 手续费 444.5 退费 -2039 总计 80973.5 ","date":"2022-09-29","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/:1:0","tags":null,"title":"装修笔记（一）硬装篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"1. 方案定稿 装修之初肯定是要确定设计稿。设计师们为了体现自己存在的价值和意义，总归是要对格局进行或多或少的改动的。我倒不是说这些改动没有意义，至少从我的案例来看，改来改去呢，最后还是基本跟原本的户型图大体一致，只是厨房侧壁的位置向外推移了大概30公分。当然我这个情况也跟我实际户型较为中规中矩有关，如果户型本身属于比较“特立独行”的，那可供设计师发挥的空间就比较大了。在我个人看来，设计师的主要作用可能还真不是去“设计”，更多的时候是在我们面临选择困难症时给出一点参考，抑或是起到沟通业主、工程队之间的一个桥梁的作用。我对我这次的设计师还是非常满意的，作为同龄人，沟通交流很方便，态度也非常好，业务能力也比较强。 白嫖一时爽，一直白嫖一直爽。 这里面还有一个小Trick：你可以多实地走访一些装修公司，一定要非常诚恳的去谈，给对方一种你就会在他家开工的既视感，然后让设计师拿出设计稿。至于最后选不选他家，只要你没交钱谁也不能强迫你。多拿一些设计稿，看得多了自然心里有最合适的想法，到时候综合各方面因素再去确定一家心仪的装修公司，之前的设计稿也可以作为参考。 原户型图\r方案一\r方案二\r方案三\r方案四\r最终方案\r","date":"2022-09-29","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/:2:0","tags":null,"title":"装修笔记（一）硬装篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"2. 主材选购 在确定好设计总体方案后，接下来就是选材。无论是全包还是半包，选材都是必不可少的环节。唯一的区别在于，半包的情况，选材可能更多的要业主本人操心，在琳琅满目的家具城分门别类地进行筛选出心仪的主材。全包相对简洁一些，因为家装公司一般是和部分主材经销商有合作，在其合作范围内挑选即可。但是，即便如此，我和我对象在选材之时，仍然是选的眼花缭乱——合作商的各种主材也有几十上百种，鳞次栉比的排列，在射灯照射下，看得人直头秃。具体主材选定表我在这里就不贴出来了，一大堆照片，太长。只说几个我选的品牌： 瓷砖——蒙娜丽莎 卫浴——节水大师 吊顶——欧乐 石材——大唐石材 地板——圣象 推门——三木 移门——华艺 水盆——洁希卡 洁具——潜水艇 基本主材就是由上述品牌构成的，没有使用其他品牌的主材。价格档次的话，全最高档有点过于奢侈，大部分是选购的中档偏上的级别，还在自己能够承受的价格范围之内。 还有一部分主材是装修公司施工时的选材，这部分我没有去做调整，都用的装修公司默认的。在这里也仅做个记录。推荐一下我这家装修公司：沈阳博创装饰。“徽派工艺，无醛家装”，至少到目前为止我是很满意的。 水管——伟星（禧星管） 乳胶漆——玉生源儿童漆 石膏板——优时吉博罗 电线——德力西 防水——伟星咖乐 网线——CAT6E ","date":"2022-09-29","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/:3:0","tags":null,"title":"装修笔记（一）硬装篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"3. 格局改造 在确定好方案之后就是力工砸墙、砌墙等格局改造相关的项目了。一般来说装修公司是不负责这一块的，需要额外找力工去做，也算是一个”增项“了。我这边，对比原始和定稿两张方案可以看出来，基本就是将厨房西侧壁前推30公分。 另一个比较大的改动是，阳台作为赠送面积，是由一个大玻璃门分割的。这个玻璃门整体被拆除掉了。此处还有一个Trick：在社区来测量采暖面积之前，不要破坏这个隔断，这样外面的阳台是不计算采暖面积的。等测量的人员走了以后嘛，嘿嘿。 还有一点需要注意的是，从2022年1月开始，沈阳全市范围内禁止天然气公司给开放式厨房供气，这也是为何最初的几个开放式厨房方案都被否决了的原因。当然，Trick也可以有：先搞一个小门或者隔断，做成“封闭式”的，待燃气公司通气以后再拆除这个小门，就可以做成开放式的了。不过政策还是有其安全方面考量的，建议按政策走，毕竟安全无小事。 除此之外，由于我家阳台是打通的，原本的阳台是不带地热的。所以需要让装修公司给阳台铺设地热。当然这部分费用是包含在合同里的。 ","date":"2022-09-29","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/:4:0","tags":null,"title":"装修笔记（一）硬装篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"4. 水电交底 在这之前会有一系列的工作比如起保温层、铲除大白等，这些工作交给装修公司去操心就好了。水电交底需要业主、监理（施工队的头儿）、设计师同时到场，对水电的管线进行设计交接。我主要是考虑强弱电方面的问题，因为我从设计之初就是有做全屋智能的打算，所以无论是强电供应还是弱电布线都考虑得比较多一些。水和燃气的话，更多的是交给家里人去考虑了，本身我自己也不太懂。 水电交底1\r水电交底2\r水电交底3\r水电交底4\r","date":"2022-09-29","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/:5:0","tags":null,"title":"装修笔记（一）硬装篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"5. 水电完工 交底后会进行开槽放线，然后就是水电工进行水电管线的铺设工作了。 开槽放线1\r开槽放线2\r开槽放线3\r开槽放线4\r水电完工1\r水电完工2\r水电完工3\r水电完工4\r","date":"2022-09-29","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/:6:0","tags":null,"title":"装修笔记（一）硬装篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"6. 瓦工进场 瓦工师傅这一块，基本也没什么好说，选好了主材剩下的就交给瓦工师傅好了。不过需要提的一点是，瓦工结束后要美缝，美缝是没包含在装修合同里的，需要单独请人搞。 瓦工1\r瓦工2\r瓦工3\r瓦工4\r美缝1\r美缝2\r","date":"2022-09-29","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/:7:0","tags":null,"title":"装修笔记（一）硬装篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"7. 木工进场 瓦工结束后，瓦工师傅会保护现场，用一种类似膜布一样东西将它盖起来，所以不必担心污染的问题。木工这里我遇到了个麻烦——原房屋交付时，顶棚高度不齐，差距非常大，导致做完吊顶以后有一部分完全盖不住。解决的方案是用一大块石膏腻子将棚顶整体找平，填补上差的那一块，这里就只能做增项了。 找平前1\r找平前2\r找平前3\r找平前这几张图可以明显地看出来，一部分墙体的高度是不够的。 找平\r木工完成1\r木工完成2\r","date":"2022-09-29","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/:8:0","tags":null,"title":"装修笔记（一）硬装篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"8. 油工进场 油工的工作还是比较复杂的，不过我也确实了解的不多——毕竟大多数时间都是师傅在弄，我属于是甩手掌柜了。第一步是全屋刷一层界面剂，之后是阴阳角找直、石膏板找平防裂，然后是刷两遍腻子，最后是刷乳胶漆。我这里没有选择颜色漆，还是用的白漆。彩色漆可能固然好看，但是考虑到新鲜感是会过时的，只有经典白墙才永不过时，就没有选其他颜色的。上述油工每一步完成都需要晾干数日才能进行下一步操作，所以总体耗时还是比较久的。 油工1\r油工2\r油工3\r油工4\r","date":"2022-09-29","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/:9:0","tags":null,"title":"装修笔记（一）硬装篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"9. 主材进场 这一部分主要是前期选好的各项主材陆续开始安装了。中间需要跟各种厂家进行沟通联络，主要是参数方面的一些问题，倒是没有什么需要特别注意的。没啥可说的啦，上图！ 地板1\r地板2\r吊顶\r花洒\r马桶\r洗手台\r移门\r推门\r","date":"2022-09-29","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/:10:0","tags":null,"title":"装修笔记（一）硬装篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/"},{"categories":["房屋装修笔记"],"content":"10. 收尾工作 主材全部装好以后，最后一步就是安装自行购买的灯具、开关、插座、各个接口了。我对无主灯设计不是非常感冒，因为要做全屋吊顶，影响层高。各房间还是采用的有主灯的方案。射灯等装饰照明也基本没有用，使用了一些筒灯作为基础照明。搞太多装饰照明可能确实比较好看，但是经济能力也确实不太允许，还是秉持着能省则省的原则，满足基础照明需求优先。 接口这一块，按需购买即可。开关我会在后续关于全屋智能的文章中着重讲述。插座的话，有一个小Trick可以参考：厨房和卫生间应尽可能使用单开五孔插座。厨房的单开五孔，可以在不为设备断电的情况下通过插座开关直接控制设备的供电（开关控制该五孔插座是否有电），对于台面上的厨房小设备如烧水壶，电饭煲等比较有用。卫生间的单开五孔，可以保证在控制照明的同时能够提供插座，例如用开关控制镜前灯，同时可以为吹风机供电。 灯具这里没什么可以多说的了，每个人审美、要求等方方面面都是不一样的，选最适合自己的就是最好的。直接上图结束这篇文章吧。 客厅主灯\r卧室主灯\r卫生间照明\r门厅筒灯\r过道筒灯","date":"2022-09-29","objectID":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/:11:0","tags":null,"title":"装修笔记（一）硬装篇","uri":"/%E8%A3%85%E4%BF%AE%E7%AC%94%E8%AE%B0%E4%B8%80%E7%A1%AC%E8%A3%85%E7%AF%87/"},{"categories":["Hugo静态页面生成器指南"],"content":"最近把个人主页从Statiq全面转移到Hugo上了。五年的时间内，从Hexo到Statiq再到Hugo，我尝试了不同的几种静态页面生成器。最终选择了Hugo也是因为感觉，它还是最方便好用的一种。在此记录一下Hugo的使用方式、我所选用的FixIt主题的搭建和配置，以及配合GitHub Webhook实现代码自动更新推送的流程。 ","date":"2022-09-10","objectID":"/hugo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2%E5%8F%8A%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81%E6%8C%87%E5%8D%97/:0:0","tags":null,"title":"Hugo搭建静态页面及自动推送指南","uri":"/hugo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2%E5%8F%8A%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81%E6%8C%87%E5%8D%97/"},{"categories":["Hugo静态页面生成器指南"],"content":"1. 项目搭建 Hugo是基于GoLang的静态页面生成器，以超高的渲染速度，超低的渲染负载著称。开发速度、更新迭代都非常快，各项功能支持也很广泛，堪称“下一代”静态页面生成器。下文中开发环境为Windows11 x64操作系统，VSCode编辑器。 首先在发布页面下载二进制预编译文件，然后将解压后的hugo.exe放在你喜欢的目录里。我放在了C:\\Program Files\\hugo目录下。 打开「开始-\u003e设置-\u003e系统-\u003e高级系统设置-\u003e环境变量」，在「用户变量-\u003ePath」下加入存放Hugo可执行文件的目录。终端测试命令hugo version，如能够正确显示版本号，则可以进入下一步。 在代码编辑器中导航至想存放项目文件的目录中，使用命令 hugo new site your_project_name 建立项目文件夹，并初始化项目。 之后，从FixIt主题的Github仓库下载全部文件，复制到本地项目的themes/anatole/目录中。再将主题文件夹中的exampleSite/config目录及内容拷贝到项目根目录下，并删除原项目自带的config.toml文件。至此，所有基本环境已经搭建完成。 FixIt主题的配置可以参考官方文档，整体较为简单，并且主题随带的默认配置已经很合适了。主题中包含大量支持自定义的元素，可以根据需求自行调整。 ","date":"2022-09-10","objectID":"/hugo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2%E5%8F%8A%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81%E6%8C%87%E5%8D%97/:1:0","tags":null,"title":"Hugo搭建静态页面及自动推送指南","uri":"/hugo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2%E5%8F%8A%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81%E6%8C%87%E5%8D%97/"},{"categories":["Hugo静态页面生成器指南"],"content":"2. 版本管理 建立好项目以后，就可以在项目目录下的content目录中进行写作了。如果掌握不好写作的格式要求，可以将themes/anatole/exampleSite/content目录下的内容拷贝到项目content目录中，这些示例文档都是可以参考的案例。Markdown语法部分也可以参考我在这个系列中的第二篇文章——Hugo/FixIt语法参考。 文章编写完成后，终端中使用命令hugo server可以在localhost:1313进行预览，此模式下支持热编辑。如渲染效果满意，使用命令hugo可以进行渲染生成。常用命令如下： hugo serve # 预览网页 hogo serve -e production # 以生产环境预览网页 hugo serve --disableFastRender # 预览时关闭快速渲染，重新完整渲染改动页面 hugo serve --cleanDestinationDir # 清除预览目录中的多余页面 hugo # 渲染输出 hugo --cleanDestinationDir # 清除输出目录中的多余页面 渲染输出到public目录后就可以推送到Git了。这部分本不想着墨太多，但考虑到我自己有时候也经常忘记如何使用Git，写在这里权当给自己一个Reminder了。 以GitHub为例，安装完Git后首先是本地Git用户信息配置并生成SSH密钥： git config user.name \"yourname\" git config user.email \"your_email@youremail.com\" ssh-keygen -t rsa -C \"your_email@youremail.com\" 然后将.ssh/id_rsa.pub中的内容复制粘贴到GitHub 「Settings-\u003eSSH and GPG keys-\u003eNew SSH key」处。 验证连接：ssh -T git@github.com 连接成功后，在远程创建与本地项目目录同名的仓库。本地目录下初始化Git：git init 然后将本地目录连接远程仓库： git remote add origin git@github.com:xxx.git #推荐，SSH方式 git remote add origin https:xxx.git #HTTPS方式 最后同步仓库： # 若远程仓库有文件： git pull origin main # 若远程仓库为空： git commit -m \"comment\" git push origin main ","date":"2022-09-10","objectID":"/hugo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2%E5%8F%8A%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81%E6%8C%87%E5%8D%97/:2:0","tags":null,"title":"Hugo搭建静态页面及自动推送指南","uri":"/hugo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2%E5%8F%8A%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81%E6%8C%87%E5%8D%97/"},{"categories":["Hugo静态页面生成器指南"],"content":"3. 自动拉取 配置好Git后，可以开始进行服务器上的设置，以完成每次更新推送到Github都可以自动拉取文件，不需要手动同步服务器文件了。 服务器以使用宝塔面板为例，运行环境是Ubuntu 20.04LTS。 首先安装并配置Git： sudo apt install git git config --global user.name \"yourname\" git config --global user.email \"your_email@youremail.com\" sudo ssh-keygen -t rsa -C \"xxxxx@xxxxx.com\" sudo cat /root/.ssh/id_rsa.pub # 复制密钥并粘贴到GitHub sudo -u root ssh -T git@github.com 之后登录宝塔面板，在「软件商店-\u003e宝塔插件」处搜索并安装宝塔WebHook。添加到主面板后，在主面板点击它，新建一个WebHook。这里需要注意，和常见的接收到信息后拉取同步整个仓库不同的是，Hugo渲染输出页面只存在于仓库的public路径下，所以我们需要设置为只同步该路径下的内容，其余文件不需要同步。具体配置代码如下： #! /bin/bash echo \"\" # 输出当前时间 date --date='0 days ago' \"+%Y-%m-%d %H:%M:%S\" echo \"-------开始-------\" # 服务器项目存放路径 gitPath=\"/www/wwwroot/your_file_path\" # 此处不要用HTTPS地址，使用SSH地址 gitHttp=\"git@github.com:your_repository_path\" echo \"Web站点路径：$gitPath\" sudo rm -rf $gitPath mkdir $gitPath cd $gitPath #判断是否存在git目录 if [ ! -d \".git\" ]; then echo \"在该目录下克隆git\" sudo git clone $gitHttp gittemp sudo mv gittemp/.git . sudo rm -rf gittemp fi echo \"拉取最新的项目文件\" # 设置部分拉取 sudo git config core.sparsecheckout true sudo echo public/ \u003e\u003e .git/info/sparse-checkout # 拉取最新的项目文件 git reset --hard origin/main sudo git pull # 移动文件 sudo mv $gitPath/public/* $gitPath/ sudo rm -rf $gitPath/public echo \"-----拉取成功-----\" exit 设置好后保存，在WebHook右侧点击“测试”，可以在“日志”中查看代码执行情况。如果一切正常，那么点击“查看密钥”处可以看到密钥，复制它。来到GitHub仓库，在仓库设置的左侧有一个“Webhooks”选项卡，点击它，添加一个Webhook，在Payload URL处填写： https://宝塔面板地址/hook?access_key=复制的密钥 Content Type选择“application/json”，SSL verification根据情况设置，其他不要改动，保存Webhook。 接下来就是更新本地代码，推送到GitHub上，然后查看自动拉取情况了。 ","date":"2022-09-10","objectID":"/hugo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2%E5%8F%8A%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81%E6%8C%87%E5%8D%97/:3:0","tags":null,"title":"Hugo搭建静态页面及自动推送指南","uri":"/hugo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E9%A1%B5%E9%9D%A2%E5%8F%8A%E8%87%AA%E5%8A%A8%E6%8E%A8%E9%80%81%E6%8C%87%E5%8D%97/"},{"categories":["Hugo静态页面生成器指南"],"content":"此文章系Hugo以及FixIt主题所支持的Markdown语法规则参考及演示 ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:0:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"0 摘要 使用如下代码进行手动摘要分割： \u003c!--more--\u003e ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:1:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"1 标题 从 h2 到 h6 的标题在每个级别上都加上一个 ＃: ## h2 标题 ### h3 标题 #### h4 标题 ##### h5 标题 ###### h6 标题 输出的 HTML 看起来像这样: \u003ch2\u003eh2 标题\u003c/h2\u003e \u003ch3\u003eh3 标题\u003c/h3\u003e \u003ch4\u003eh4 标题\u003c/h4\u003e \u003ch5\u003eh5 标题\u003c/h5\u003e \u003ch6\u003eh6 标题\u003c/h6\u003e 标题 ID 要添加自定义标题 ID, 请在与标题相同的行中将自定义 ID 放在花括号中: ### 一个很棒的标题 {#custom-id} 输出的 HTML 看起来像这样: \u003ch3 id=\"custom-id\"\u003e一个很棒的标题\u003c/h3\u003e ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:2:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"2 注释 注释是和 HTML 兼容的： \u003c!-- 这是一段注释 --\u003e 不能看到以下的注释: ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:3:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"3 水平线 HTML 中的 \u003chr\u003e 标签是用来在段落元素之间创建一个 “专题间隔” 的. 使用 Markdown, 你可以用以下方式创建一个 \u003chr\u003e 标签: ___: 三个连续的下划线 ---: 三个连续的破折号 ***: 三个连续的星号 呈现的输出效果如下: ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:4:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"4 段落 按照纯文本的方式书写段落, 纯文本在呈现的 HTML 中将用 \u003cp\u003e/\u003c/p\u003e 标签包裹. 如下段落: Lorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad. 输出的 HTML 看起来像这样: \u003cp\u003eLorem ipsum dolor sit amet, graecis denique ei vel, at duo primis mandamus. Et legere ocurreret pri, animal tacimates complectitur ad cum. Cu eum inermis inimicus efficiendi. Labore officiis his ex, soluta officiis concludaturque ei qui, vide sensibus vim ad.\u003c/p\u003e 可以使用一个空白行进行换行. ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:5:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"5 内联 HTML 元素 如果你需要某个 HTML 标签 (带有一个类), 则可以简单地像这样使用: Markdown 格式的段落. \u003cdiv class=\"class\"\u003e 这是 \u003cb\u003eHTML\u003c/b\u003e \u003c/div\u003e Markdown 格式的段落. ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:6:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"6 强调 ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:7:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"加粗 用于强调带有较粗字体的文本片段. 以下文本片段会被 渲染为粗体. **渲染为粗体** __渲染为粗体__ 输出的 HTML 看起来像这样: \u003cstrong\u003e渲染为粗体\u003c/strong\u003e ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:7:1","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"斜体 用于强调带有斜体的文本片段. 以下文本片段被 渲染为斜体. *渲染为斜体* _渲染为斜体_ 输出的 HTML 看起来像这样: \u003cem\u003e渲染为斜体\u003c/em\u003e ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:7:2","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"删除线 按照 GFMGitHub flavored Markdown 你可以使用删除线. ~~这段文本带有删除线.~~ 呈现的输出效果如下: 这段文本带有删除线. 输出的 HTML 看起来像这样: \u003cdel\u003e这段文本带有删除线.\u003c/del\u003e ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:7:3","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"组合 加粗, 斜体, 和删除线可以 组合使用. ***加粗和斜体*** ~~**删除线和加粗**~~ ~~*删除线和斜体*~~ ~~***加粗, 斜体和删除线***~~ 呈现的输出效果如下: 加粗和斜体 删除线和加粗 删除线和斜体 加粗, 斜体和删除线 输出的 HTML 看起来像这样: \u003cem\u003e\u003cstrong\u003e加粗和斜体\u003c/strong\u003e\u003c/em\u003e \u003cdel\u003e\u003cstrong\u003e删除线和加粗\u003c/strong\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e删除线和斜体\u003c/em\u003e\u003c/del\u003e \u003cdel\u003e\u003cem\u003e\u003cstrong\u003e加粗, 斜体和删除线\u003c/strong\u003e\u003c/em\u003e\u003c/del\u003e ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:7:4","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"7 引用 用于在文档中引用其他来源的内容块. 在要引用的任何文本之前添加 \u003e: \u003e **Fusion Drive** combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 呈现的输出效果如下: Fusion Drive combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. 输出的 HTML 看起来像这样: \u003cblockquote\u003e \u003cp\u003e \u003cstrong\u003eFusion Drive\u003c/strong\u003e combines a hard drive with a flash storage (solid-state drive) and presents it as a single logical volume with the space of both drives combined. \u003c/p\u003e \u003c/blockquote\u003e 引用也可以嵌套: \u003e Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. \u003e\u003e Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. 呈现的输出效果如下: Donec massa lacus, ultricies a ullamcorper in, fermentum sed augue. Nunc augue augue, aliquam non hendrerit ac, commodo vel nisi. Sed adipiscing elit vitae augue consectetur a gravida nunc vehicula. Donec auctor odio non est accumsan facilisis. Aliquam id turpis in dolor tincidunt mollis ac eu diam. ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:8:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"8 列表 ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:9:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"无序列表 一系列项的列表, 其中项的顺序没有明显关系. 你可以使用以下任何符号来表示无序列表中的项: * 一项内容 - 一项内容 + 一项内容 例如: * Lorem ipsum dolor sit amet * Consectetur adipiscing elit * Integer molestie lorem at massa * Facilisis in pretium nisl aliquet * Nulla volutpat aliquam velit * Phasellus iaculis neque * Purus sodales ultricies * Vestibulum laoreet porttitor sem * Ac tristique libero volutpat at * Faucibus porta lacus fringilla vel * Aenean sit amet erat nunc * Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Phasellus iaculis neque Purus sodales ultricies Vestibulum laoreet porttitor sem Ac tristique libero volutpat at Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem 输出的 HTML 看起来像这样: \u003cul\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit \u003cul\u003e \u003cli\u003ePhasellus iaculis neque\u003c/li\u003e \u003cli\u003ePurus sodales ultricies\u003c/li\u003e \u003cli\u003eVestibulum laoreet porttitor sem\u003c/li\u003e \u003cli\u003eAc tristique libero volutpat at\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ul\u003e ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:9:1","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"有序列表 一系列项的列表, 其中项的顺序确实很重要. 1. Lorem ipsum dolor sit amet 2. Consectetur adipiscing elit 3. Integer molestie lorem at massa 4. Facilisis in pretium nisl aliquet 5. Nulla volutpat aliquam velit 6. Faucibus porta lacus fringilla vel 7. Aenean sit amet erat nunc 8. Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem 输出的 HTML 看起来像这样: \u003col\u003e \u003cli\u003eLorem ipsum dolor sit amet\u003c/li\u003e \u003cli\u003eConsectetur adipiscing elit\u003c/li\u003e \u003cli\u003eInteger molestie lorem at massa\u003c/li\u003e \u003cli\u003eFacilisis in pretium nisl aliquet\u003c/li\u003e \u003cli\u003eNulla volutpat aliquam velit\u003c/li\u003e \u003cli\u003eFaucibus porta lacus fringilla vel\u003c/li\u003e \u003cli\u003eAenean sit amet erat nunc\u003c/li\u003e \u003cli\u003eEget porttitor lorem\u003c/li\u003e \u003c/ol\u003e 技巧 如果你对每一项使用 1., Markdown 将自动为每一项编号. 例如: 1. Lorem ipsum dolor sit amet 1. Consectetur adipiscing elit 1. Integer molestie lorem at massa 1. Facilisis in pretium nisl aliquet 1. Nulla volutpat aliquam velit 1. Faucibus porta lacus fringilla vel 1. Aenean sit amet erat nunc 1. Eget porttitor lorem 呈现的输出效果如下: Lorem ipsum dolor sit amet Consectetur adipiscing elit Integer molestie lorem at massa Facilisis in pretium nisl aliquet Nulla volutpat aliquam velit Faucibus porta lacus fringilla vel Aenean sit amet erat nunc Eget porttitor lorem ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:9:2","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"任务列表 任务列表使你可以创建带有复选框的列表. 要创建任务列表, 请在任务列表项之前添加破折号 (-) 和带有空格的方括号 ([ ]). 要选择一个复选框，请在方括号之间添加 x ([x]). - [x] Write the press release - [ ] Update the website - [ ] Contact the media 呈现的输出效果如下: Write the press release Update the website Contact the media ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:9:3","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"9 代码 ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:10:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"行内代码 用 ` 包装行内代码段. 在这个例子中, `\u003csection\u003e\u003c/section\u003e` 会被包裹成 **代码**. 呈现的输出效果如下: 在这个例子中, \u003csection\u003e\u003c/section\u003e 会被包裹成 代码. 输出的 HTML 看起来像这样: \u003cp\u003e 在这个例子中, \u003ccode\u003e\u0026lt;section\u0026gt;\u0026lt;/section\u0026gt;\u003c/code\u003e 会被包裹成 \u003cstrong\u003e代码\u003c/strong\u003e. \u003c/p\u003e ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:10:1","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"缩进代码 将几行代码缩进至少四个空格，例如: // Some comments line 1 of code line 2 of code line 3 of code 呈现的输出效果如下: // Some comments\rline 1 of code\rline 2 of code\rline 3 of code\r输出的 HTML 看起来像这样: \u003cpre\u003e \u003ccode\u003e // Some comments line 1 of code line 2 of code line 3 of code \u003c/code\u003e \u003c/pre\u003e ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:10:2","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"围栏代码块 使用 “围栏” ``` 来生成一段带有语言属性的代码块. ```markdown Sample text here... ``` 输出的 HTML 看起来像这样: \u003cpre language-html\u003e \u003ccode\u003eSample text here...\u003c/code\u003e \u003c/pre\u003e ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:10:3","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"语法高亮 GFMGitHub Flavored Markdown 也支持语法高亮. 要激活它，只需在第一个代码 “围栏” 之后直接添加你要使用的语言的文件扩展名, ```js, 语法高亮显示将自动应用于渲染的 HTML 中. 例如, 在以下 JavaScript 代码中应用语法高亮: ```js grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; ``` 呈现的输出效果如下: grunt.initConfig({ assemble: { options: { assets: 'docs/assets', data: 'src/data/*.{json,yml}', helpers: 'src/custom-helpers.js', partials: ['src/partials/**/*.{hbs,md}'] }, pages: { options: { layout: 'default.hbs' }, files: { './': ['src/templates/pages/index.hbs'] } } } }; 注意 Hugo 文档中的 语法高亮页面 介绍了有关语法高亮的更多信息, 包括语法高亮的 shortcode. ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:10:4","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"10 表格 通过在每个单元格之间添加竖线作为分隔线, 并在标题下添加一行破折号 (也由竖线分隔) 来创建表格. 注意, 竖线不需要垂直对齐. | Option | Description | | ------ | ----------- | | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. 输出的 HTML 看起来像这样: \u003ctable\u003e \u003cthead\u003e \u003ctr\u003e \u003cth\u003eOption\u003c/th\u003e \u003cth\u003eDescription\u003c/th\u003e \u003c/tr\u003e \u003c/thead\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003edata\u003c/td\u003e \u003ctd\u003epath to data files to supply the data that will be passed into templates.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eengine\u003c/td\u003e \u003ctd\u003eengine to be used for processing templates. Handlebars is the default.\u003c/td\u003e \u003c/tr\u003e \u003ctr\u003e \u003ctd\u003eext\u003c/td\u003e \u003ctd\u003eextension to be used for dest files.\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e 文本右对齐或居中对齐 在任何标题下方的破折号右侧添加冒号将使该列的文本右对齐. 在任何标题下方的破折号两边添加冒号将使该列的对齐文本居中. | Option | Description | |:------:| -----------:| | data | path to data files to supply the data that will be passed into templates. | | engine | engine to be used for processing templates. Handlebars is the default. | | ext | extension to be used for dest files. | 呈现的输出效果如下: Option Description data path to data files to supply the data that will be passed into templates. engine engine to be used for processing templates. Handlebars is the default. ext extension to be used for dest files. ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:11:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"11 链接 ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:12:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"基本链接 \u003chttps://assemble.io\u003e \u003ccontact@revolunet.com\u003e [Assemble](https://assemble.io) 呈现的输出效果如下 (将鼠标悬停在链接上，没有提示): https://assemble.io contact@revolunet.com Assemble 输出的 HTML 看起来像这样: \u003ca href=\"https://assemble.io\"\u003ehttps://assemble.io\u003c/a\u003e \u003ca href=\"mailto:contact@revolunet.com\"\u003econtact@revolunet.com\u003c/a\u003e \u003ca href=\"https://assemble.io\"\u003eAssemble\u003c/a\u003e ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:12:1","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"添加一个标题 [Upstage](https://github.com/upstage/ \"Visit Upstage!\") 呈现的输出效果如下 (将鼠标悬停在链接上，会有一行提示): Upstage 输出的 HTML 看起来像这样: \u003ca href=\"https://github.com/upstage/\" title=\"Visit Upstage!\"\u003eUpstage\u003c/a\u003e ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:12:2","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"定位标记 定位标记使你可以跳至同一页面上的指定锚点. 例如, 每个章节: ## Table of Contents * [Chapter 1](#chapter-1) * [Chapter 2](#chapter-2) * [Chapter 3](#chapter-3) 将跳转到这些部分: ## Chapter 1 \u003ca id=\"chapter-1\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 2 \u003ca id=\"chapter-2\"\u003e\u003c/a\u003e Content for chapter one. ## Chapter 3 \u003ca id=\"chapter-3\"\u003e\u003c/a\u003e Content for chapter one. 注意 定位标记的位置几乎是任意的. 因为它们并不引人注目, 所以它们通常被放在同一行了. ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:12:3","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"12 脚注 脚注使你可以添加注释和参考, 而不会使文档正文混乱. 当你创建脚注时, 会在添加脚注引用的位置出现带有链接的上标编号. 读者可以单击链接以跳至页面底部的脚注内容. 要创建脚注引用, 请在方括号中添加插入符号和标识符 ([^1]). 标识符可以是数字或单词, 但不能包含空格或制表符. 标识符仅将脚注引用与脚注本身相关联 - 在脚注输出中, 脚注按顺序编号. 在中括号内使用插入符号和数字以及用冒号和文本来添加脚注内容 ([^1]：这是一段脚注). 你不一定要在文档末尾添加脚注. 可以将它们放在除列表, 引用和表格等元素之外的任何位置. 这是一个数字脚注[^1]. 这是一个带标签的脚注[^label] [^1]: 这是一个数字脚注 [^label]: 这是一个带标签的脚注 这是一个数字脚注1. 这是一个带标签的脚注2 ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:13:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"13 图片 图片的语法与链接相似, 但包含一个在前面的感叹号. ![Minion](https://octodex.github.com/images/minion.png) 或者: ![Alt text](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\") Alt text 像链接一样, 图片也具有脚注样式的语法: ![Alt text][id] Alt text 稍后在文档中提供参考内容, 用来定义 URL 的位置: [id]: https://octodex.github.com/images/dojocat.jpg \"The Dojocat\" 技巧 FixIt 主题提供了一个包含更多功能的 图片的 shortcode. ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:14:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"14 数学公式 FixIt 基于 $\\KaTeX$ 提供数学公式的支持. 在你的 网站配置 中的 [params.math] 下面设置属性 enable = true, 并在文章的前置参数中设置属性 math: true来启用数学公式的自动渲染. $\\KaTeX$ 根据 特定的分隔符 来自动渲染公式. 技巧 有一份 $\\KaTeX$ 中支持的 $\\TeX$ 函数 清单. 注意 由于 Hugo 在渲染 Markdown 文档时会根据 _/*/\u003e\u003e 之类的语法生成 HTML 文档, 并且有些转义字符形式的文本内容 (如 \\(/\\)/\\[/\\]/\\\\) 会自动进行转义处理, 因此需要对这些地方进行额外的转义字符表达来实现自动渲染: _ -\u003e \\_ * -\u003e \\* \u003e\u003e -\u003e \\\u003e\u003e \\( -\u003e \\\\( \\) -\u003e \\\\) \\[ -\u003e \\\\[ \\] -\u003e \\\\] \\\\ -\u003e \\\\\\\\ FixIt 主题支持 raw shortcode 以避免这些转义字符, 它可以帮助您编写原始数学公式内容. 一个 raw 示例: 行内公式: \\(\\mathbf{E}=\\sum_{i} \\mathbf{E}_{i}=\\mathbf{E}_{1}+\\mathbf{E}_{2}+\\mathbf{E}_{3}+\\cdots\\) 公式块: \\[ a=b+c \\\\ d+e=f \\]\r呈现的输出效果如下: 行内公式: (\\mathbf{E}=\\sum_{i} \\mathbf{E}{i}=\\mathbf{E}{1}+\\mathbf{E}{2}+\\mathbf{E}{3}+\\cdots) 公式块: \\[ a=b+c \\\\ d+e=f \\]\r","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:15:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"行内公式 默认的行内公式分割符有: $ ... $ \\( ... \\) (转义的: \\\\( ... \\\\)) 例如: $c = \\pm\\sqrt{a^2 + b^2}$ 和 \\\\(f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi\\\\) 呈现的输出效果如下: $c = \\pm\\sqrt{a^2 + b^2}$ 和 \\(f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi\\) ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:15:1","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"公式块 默认的公式块分割符有: $$ ... $$ \\[ ... \\] (转义的: \\\\[ ... \\\\]) \\begin{equation} ... \\end{equation} (不编号的: \\begin{equation*} ... \\end{equation*}) \\begin{align} ... \\end{align} (不编号的: \\begin{align*} ... \\end{align*}) \\begin{alignat} ... \\end{alignat} (不编号的: \\begin{alignat*} ... \\end{alignat*}) \\begin{gather} ... \\end{gather} (不编号的: \\begin{gather*} ... \\end{gather*}) \\begin{CD} ... \\end{CD} 例如: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\\\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\\\] \\begin{equation*} \\rho \\frac{\\mathrm{D} \\mathbf{v}}{\\mathrm{D} t}=\\nabla \\cdot \\mathbb{P}+\\rho \\mathbf{f} \\end{equation*} \\begin{equation} \\mathbf{E}=\\sum_{i} \\mathbf{E}\\_{i}=\\mathbf{E}\\_{1}+\\mathbf{E}\\_{2}+\\mathbf{E}_{3}+\\cdots \\end{equation} \\begin{align} a\u0026=b+c \\\\\\\\ d+e\u0026=f \\end{align} \\begin{alignat}{2} 10\u0026x+\u00263\u0026y = 2 \\\\\\\\ 3\u0026x+\u002613\u0026y = 4 \\end{alignat} \\begin{gather} a=b \\\\\\\\ e=b+c \\end{gather} \\begin{CD} A @\u003ea\\\u003e\u003e B \\\\\\\\ @VbVV @AAcA \\\\\\\\ C @= D \\end{CD} 呈现的输出效果如下: $$ c = \\pm\\sqrt{a^2 + b^2} $$ \\[ f(x)=\\int_{-\\infty}^{\\infty} \\hat{f}(\\xi) e^{2 \\pi i \\xi x} d \\xi \\] \\begin{equation*} \\rho \\frac{\\mathrm{D} \\mathbf{v}}{\\mathrm{D} t}=\\nabla \\cdot \\mathbb{P}+\\rho \\mathbf{f} \\end{equation*} \\begin{equation} \\mathbf{E}=\\sum_{i} \\mathbf{E}_{i}=\\mathbf{E}_{1}+\\mathbf{E}_{2}+\\mathbf{E}_{3}+\\cdots \\end{equation} \\begin{align} a\u0026=b+c \\\\ d+e\u0026=f \\end{align} \\begin{alignat}{2} 10\u0026x+\u00263\u0026y = 2 \\\\ 3\u0026x+\u002613\u0026y = 4 \\end{alignat} \\begin{gather} a=b \\\\ e=b+c \\end{gather} \\begin{CD} A @\u003ea\u003e\u003e B \\\\ @VbVV @AAcA \\\\ C @= D \\end{CD} 技巧 你可以在 网站配置 中自定义行内公式和公式块的分割符. ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:15:2","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"mhchem mhchem 是一个 $\\KaTeX$ 的插件. 通过这个扩展, 你可以在文章中轻松编写漂亮的化学方程式. $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ 呈现的输出效果如下: $$ \\ce{CO2 + C -\u003e 2 CO} $$ $$ \\ce{Hg^2+ -\u003e[I-] HgI2 -\u003e[I-] [Hg^{II}I4]^2-} $$ ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:15:3","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"15 字符修饰 FixIt 主题支持多种 字符修饰 Markdown 扩展语法: [Hugo]^(一个开源的静态网站生成工具) [99]/[100] \u003cabbr title=\"Graphics Interchange Format\"\u003eGIF\u003c/abbr\u003e是一种位图图片格式。 H\u003csub\u003e2\u003c/sub\u003eO X\u003csup\u003en\u003c/sup\u003e + Y\u003csup\u003en\u003c/sup\u003e = Z\u003csup\u003en\u003c/sup\u003e 按下\u003ckbd\u003e\u003ckbd\u003eCTRL\u003c/kbd\u003e+\u003ckbd\u003eALT\u003c/kbd\u003e+\u003ckbd\u003eDelete\u003c/kbd\u003e\u003c/kbd\u003e以访问任务管理器。 大多数\u003cmark\u003e口腔癌\u003c/mark\u003e都是由于不良的生活习惯导致的。 呈现的输出效果如下: Hugo一个开源的静态网站生成工具 90/100 GIF是一种位图图片格式。 H2O Xn + Yn = Zn 按下CTRL+ALT+Delete以访问任务管理器。 大多数口腔癌都是由于不良的生活习惯导致的。 ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:16:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"16 转义字符 在某些特殊情况下，文章内容会与 Markdown 的基本或者扩展语法冲突, 并且无法避免. 转义字符语法可以帮助你渲染出想要的内容: {?X} -\u003e X 例如, 两个 : 会启用 emoji 语法. 但有时候这不是你想要的结果. 可以像这样使用转义字符语法: {?:}joy: 呈现的输出效果如下: :joy: 而不是 😂 另一个例子是: [link{?]}(#escape-character) 呈现的输出效果如下: [link](#escape-character) 而不是 link. ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:17:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"17 内置shortcode ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:18:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"1 figure 一个 figure 示例: {{\u003c figure src=\"https://octodex.github.com/images/minion.png\" title=\"Lighthouse (figure)\" \u003e}} 呈现的输出效果如下: Lighthouse (figure) 输出的 HTML 看起来像这样: \u003cfigure\u003e \u003cimg src=\"https://octodex.github.com/images/minion.png\"/\u003e \u003cfigcaption\u003e \u003ch4\u003eLighthouse (figure)\u003c/h4\u003e \u003c/figcaption\u003e \u003c/figure\u003e ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:18:1","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"2 gist 一个 gist 示例: {{\u003c gist spf13 7896402 \u003e}} 呈现的输出效果如下: 输出的 HTML 看起来像这样: \u003cscript type=\"application/javascript\" src=\"https://gist.github.com/spf13/7896402.js\"\u003e\u003c/script\u003e ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:18:2","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"3 highlight 一个 highlight 示例: {{\u003c highlight html \u003e}} \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e {{\u003c /highlight \u003e}} 呈现的输出效果如下: \u003csection id=\"main\"\u003e \u003cdiv\u003e \u003ch1 id=\"title\"\u003e{{ .Title }}\u003c/h1\u003e {{ range .Pages }} {{ .Render \"summary\"}} {{ end }} \u003c/div\u003e \u003c/section\u003e ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:18:3","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"4 param 一个 param 示例: {{\u003c param description \u003e}} 呈现的输出效果如下: The Less You Know, The Further You Go. ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:18:4","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"18 扩展shortcode ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:19:0","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"1 style style shortcode 用来在你的文章中插入自定义样式，它有两个位置参数. 第一个参数是自定义样式的内容. 它支持 SASS 中的嵌套语法，并且 \u0026 指代这个父元素. 第二个参数是包裹你要更改样式的内容的 HTML 标签, 默认值是 div. 一个 style 示例: {{\u003c style \"text-align:right; strong{color:#00b1ff;}\" \u003e}} This is a **right-aligned** paragraph. {{\u003c /style \u003e}} 呈现的输出效果如下: This is a right-aligned paragraph. ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:19:1","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"2 link link shortcode 是 Markdown 链接语法的替代，可以提供一些其它的功能并且可以在代码块中使用。 link shortcode 有以下命名参数: href [必需] (第一个位置参数) 链接的目标. content [可选] (第二个位置参数) 链接的内容, 默认值是 href 参数的值. 支持 Markdown 或者 HTML 格式. title [可选] (第三个位置参数) HTML a 标签 的 title 属性, 当悬停在链接上会显示的提示. rel [可选] HTML a 标签 的 rel 补充属性. class [可选] HTML a 标签 的 class 属性. 一个 link 示例: {{\u003c link \"https://assemble.io\" \u003e}} 或者 {{\u003c link href=\"https://assemble.io\" \u003e}} {{\u003c link \"mailto:contact@revolunet.com\" \u003e}} 或者 {{\u003c link href=\"mailto:contact@revolunet.com\" \u003e}} {{\u003c link \"https://assemble.io\" Assemble \u003e}} 或者 {{\u003c link href=\"https://assemble.io\" content=Assemble \u003e}} 呈现的输出效果如下: https://assemble.io mailto:contact@revolunet.com Assemble 一个带有标题的 link 示例: {{\u003c link \"https://github.com/upstage/\" Upstage \"Visit Upstage!\" \u003e}} 或者 {{\u003c link href=\"https://github.com/upstage/\" content=Upstage title=\"Visit Upstage!\" \u003e}} 呈现的输出效果如下 (将鼠标悬停在链接上，会有一行提示): Upstage ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:19:2","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"3 image image shortcode 是 figure shortcode的替代，image shortcode 可以充分利用 lazysizes 和 lightGallery 两个依赖库. image shortcode 有以下命名参数: src [必需] (第一个位置参数) 图片的 URL. alt [可选] (第二个位置参数) 图片无法显示时的替代文本, 默认值是 src 参数的值. 支持 Markdown 或者 HTML 格式. caption [可选] (第三个位置参数) 图片标题. 支持 Markdown 或者 HTML 格式. title [可选] 当悬停在图片上会显示的提示. class [可选] HTML figure 标签的 class 属性. src_s [可选] 图片缩略图的 URL, 用在画廊模式中, 默认值是 src 参数的值. src_l [可选] 高清图片的 URL, 用在画廊模式中, 默认值是 src 参数的值. height [可选] 图片的 height 属性. width [可选] 图片的 width 属性. linked [可选] 图片是否需要被链接, 默认值是 true. rel [可选] HTML a 标签 的 rel 补充属性, 仅在 linked 属性设置成 true 时有效. 一个 image 示例: {{\u003c image src=\"/images/lighthouse.jpg\" caption=\"Lighthouse (`image`)\" src_s=\"/images/lighthouse-small.jpg\" src_l=\"/images/lighthouse-large.jpg\" \u003e}} ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:19:3","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"4 admonition admonition shortcode 支持 12 种 帮助你在页面中插入提示的横幅. 支持 Markdown 或者 HTML 格式. 注意 一个 注意 横幅 摘要 一个 摘要 横幅 信息 一个 信息 横幅 技巧 一个 技巧 横幅 成功 一个 成功 横幅 问题 一个 问题 横幅 警告 一个 警告 横幅 失败 一个 失败 横幅 危险 一个 危险 横幅 Bug 一个 Bug 横幅 示例 一个 示例 横幅 引用 一个 引用 横幅 admonition shortcode 有以下命名参数: type [可选] (第一个位置参数) admonition 横幅的类型, 默认值是 note. title [可选] (第二个位置参数) admonition 横幅的标题, 默认值是 type 参数的值. open [可选] (第三个位置参数) 横幅内容是否默认展开, 默认值是 true. 一个 admonition 示例: {{\u003c admonition type=tip title=\"This is a tip\" open=false \u003e}} 一个 **技巧** 横幅 {{\u003c /admonition \u003e}} 或者 {{\u003c admonition tip \"This is a tip\" false \u003e}} 一个 **技巧** 横幅 {{\u003c /admonition \u003e}} 呈现的输出效果如下: This is a tip 一个 技巧 横幅 ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:19:4","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"5 mermaid mermaid shortcode 使用 Mermaid 库提供绘制图表和流程图的功能。mermaid 是一个可以帮助你在文章中绘制图表和流程图的库, 类似 Markdown 的语法。只需将你的 mermaid 代码插入 mermaid shortcode 中即可。 一个 流程图 mermaid 示例: {{\u003c mermaid \u003e}} graph LR; A[Hard edge] --\u003e|Link text| B(Round edge) B --\u003e C{Decision} C --\u003e|One| D[Result one] C --\u003e|Two| E[Result two] {{\u003c /mermaid \u003e}} 呈现的输出效果如下: ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:19:5","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"6 echarts echarts` shortcode 使用 ECharts 库提供数据可视化的功能。ECharts 是一个生成交互式数据可视化的库。 只需在 echarts shortcode 中以 JSON/YAML/TOML格式插入 ECharts 选项即可。 echarts shortcode 有以下命名参数: width [可选] (第一个位置参数) 数据可视化的宽度, 默认值是 100%. height [可选] (第二个位置参数) 数据可视化的高度, 默认值是 30rem. 一个 JSON 格式的 echarts 示例: {{\u003c echarts \u003e}} { \"title\": { \"text\": \"折线统计图\", \"top\": \"2%\", \"left\": \"center\" }, \"tooltip\": { \"trigger\": \"axis\" }, \"legend\": { \"data\": [\"邮件营销\", \"联盟广告\", \"视频广告\", \"直接访问\", \"搜索引擎\"], \"top\": \"10%\" }, \"grid\": { \"left\": \"5%\", \"right\": \"5%\", \"bottom\": \"5%\", \"top\": \"20%\", \"containLabel\": true }, \"toolbox\": { \"feature\": { \"saveAsImage\": { \"title\": \"保存为图片\" } } }, \"xAxis\": { \"type\": \"category\", \"boundaryGap\": false, \"data\": [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"] }, \"yAxis\": { \"type\": \"value\" }, \"series\": [ { \"name\": \"邮件营销\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [120, 132, 101, 134, 90, 230, 210] }, { \"name\": \"联盟广告\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [220, 182, 191, 234, 290, 330, 310] }, { \"name\": \"视频广告\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [150, 232, 201, 154, 190, 330, 410] }, { \"name\": \"直接访问\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [320, 332, 301, 334, 390, 330, 320] }, { \"name\": \"搜索引擎\", \"type\": \"line\", \"stack\": \"总量\", \"data\": [820, 932, 901, 934, 1290, 1330, 1320] } ] } {{\u003c /echarts \u003e}} 呈现的输出效果如下: ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:19:6","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"7 bilibili bilibili shortcode 提供了一个内嵌的用来播放 bilibili 视频的响应式播放器. 如果视频只有一个部分, 则仅需要视频的 BV id, 例如: https://www.bilibili.com/video/BV1Sx411T7QQ 一个 bilibili 示例: {{\u003c bilibili BV1Sx411T7QQ \u003e}} 或者 {{\u003c bilibili id=BV1Sx411T7QQ \u003e}} 呈现的输出效果如下: 如果视频包含多个部分, 则除了视频的 BV id 之外, 还需要 p, 默认值为 1, 例如: https://www.bilibili.com/video/BV1TJ411C7An?p=3 一个带有 p 参数的 bilibili 示例: {{\u003c bilibili BV1TJ411C7An 3 \u003e}} 或者 {{\u003c bilibili id=BV1TJ411C7An p=3 \u003e}} 呈现的输出效果如下: ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:19:7","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"8 script script shortcode 用来在你的文章中插入 Javascript 脚本. 注意 脚本内容可以保证在所有的第三方库加载之后按顺序执行. 所以你可以自由地使用第三方库. 一个 script 示例: {{\u003c script \u003e}} console.log('Hello FixIt!'); {{\u003c /script \u003e}} 你可以在开发者工具的控制台中看到输出. ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:19:8","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["Hugo静态页面生成器指南"],"content":"9 raw raw shortcode 用来在你的文章中插入原始 HTML 内容. 一个 raw 示例: 行内公式: {{\u003c raw \u003e}}\\(\\mathbf{E}=\\sum_{i} \\mathbf{E}_{i}=\\mathbf{E}_{1}+\\mathbf{E}_{2}+\\mathbf{E}_{3}+\\cdots\\){{\u003c /raw \u003e}} 公式块: {{\u003c raw \u003e}} \\[ a=b+c \\\\ d+e=f \\] {{\u003c /raw \u003e}} 原始的带有 Markdown 语法的内容: {{\u003c raw \u003e}}**Hello**{{\u003c /raw \u003e}} 呈现的输出效果如下: 行内公式: \\(\\mathbf{E}=\\sum_{i} \\mathbf{E}_{i}=\\mathbf{E}_{1}+\\mathbf{E}_{2}+\\mathbf{E}_{3}+\\cdots\\) 公式块: \\[ a=b+c \\\\ d+e=f \\]\r原始的带有 Markdown 语法的内容: **Hello** 这是一个数字脚注 ↩︎ 这是一个带标签的脚注 ↩︎ ","date":"2022-09-09","objectID":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/:19:9","tags":null,"title":"Hugo/FixIt语法参考","uri":"/hugo-fixit%E8%AF%AD%E6%B3%95%E5%8F%82%E8%80%83/"},{"categories":["技术无罪"],"content":" In the end the Party would announce that two and two made five, and you would have to believe it. — George Orwell 1 WARNING If you find that there are many words that you don’t understand when reading this article, and you need a dictionary or translation software to complete the reading, please STOP reading this article immediately – this article is not for you. This article is a professional article for developers, programmers and telecommunications engineers. In addition, this article will not teach you any technology, only theoretical introductions and test results. ","date":"2022-09-08","objectID":"/teknologio-estas-senkulpa/:0:0","tags":null,"title":"Teknologio Estas Senkulpa","uri":"/teknologio-estas-senkulpa/"},{"categories":["技术无罪"],"content":"1. Preface Today I’d like to talk about the Great Firewall (GFW) of DPRK, the principles behind it, and the methods to bypass it. Planed in 1998 and established in 2002, the GFW Project was lead by Professor Fang. Basically, it’s an Intrusion Prevention System, combined with a Detection-Attack Double Phase Model. Never underestimate the ability of the GFW Dept. Some people may wonder, if the GFW Dept is as powerful as others said, why they can still use their own way to go through it. Actually, in DPRK, all technologies should command by the politics, and serve for the politics. Though the GFW may have the ability to block some of the protocols, if they were not command to do so, they would not deploy those functions. In DPRK, people use many different words to describe the fobidden action of bypassing the GFW. The most common used phase is “Climb the Wall”. While some others may use “Study Abroad”, or “Scientifically Surf”. I myself would prefer to use the word “Magic”, and I will use it to refer to the action mentioned above in the rest of this article. So, the reason why I wrote this article is quite simple. Many people often complained to me that their Magics are unstable. In fact, airports are always like this. The best way to use a stable tool is to build it independently by yourself. After searched through the internet and tried some commonly used ways, I decided to write this article, compare all the available ways to set up an independent Magic Ladder. I will mainly forcus on free, opensource and multi-platforms supported tools and protocols that you can set up on your own server. Since the GFW possesses ADPI technology, the tunnel we use should possesses the ability of User Network Flow Camouflage. Thus, I picked serveral qualified tunnels and listed below. Those tunnels are devided into three groups by the techonologies behind them. ","date":"2022-09-08","objectID":"/teknologio-estas-senkulpa/:1:0","tags":null,"title":"Teknologio Estas Senkulpa","uri":"/teknologio-estas-senkulpa/"},{"categories":["技术无罪"],"content":"2. Theory Introduction ","date":"2022-09-08","objectID":"/teknologio-estas-senkulpa/:2:0","tags":null,"title":"Teknologio Estas Senkulpa","uri":"/teknologio-estas-senkulpa/"},{"categories":["技术无罪"],"content":"2.1 VPNs VPN, the abbreviation of Virtual Private Network, was commonly used world wide to traverse NAT or protect oneself when surfing the internet. Otherwise, it can also used as a kind of magic ladder. 2.1.1 IKEv2 IKEv2, also known as the “Internet Key Exchange v2”, is based on IPSec tunnel protocol. Jointly developed by Microsoft and Cisco, it has been merged into windows 7 and above as a built in function. IKEv2 has a very practical automatic reconnection feature. When the user temporarily loses the Internet connection, it will automatically re-establish the VPN connection after re-gain the Internet. Pros It is faster than PPTP and L2TP, and does not involve overhead on PPP Stable, especially when switching networks or reconnecting after a short time of network connection loss Highly security. It supports AES-128, AES-192, AES-256 and 3DES encryption algorithms Easy to install and configure on the client side Cons Setting up IKEv2 on the server is really difficult, which is also the hidden danger of many problems 2.1.2 OpenVPN OpenVPN uses OpenSSL library and SSL v3 / TLS v1 protocol to provide a powerful and reliable VPN solution by integrating with other technologies. Pros Highly configurable Highly Security (if PFS is used, it would be even safe for NSA) Firewall (normal) bypassing Multiple encryption algorithms Cons Third party software is required Although efforts are being made to improve the support for mobile devices, it’s still not as perfect as desktop devices 2.1.3 OpenConnect OpenConnect, or we can also call it ocserv, is a compatible server of Cisco Anyconnect. Anyconnect is a Cisco proprietary technology, and its server can only run on Cisco devices. OpenConnect solves this problem. Its goal is to run a server compatible with AnyConnect protocol on relatively Linux devices, so people can use the protocol without buying any Cisco devices. Since many multinational companies use Cisco AnyConnect to build their private network,blocking AnyConnect will have disastrous consequences. Therefore, although the handshake feature of AnyConnect is quite obvious, it can still be used normally. However, it’s said that nowadays, the GFW is able to identify OpenConnect from AnyConnect, then you may still have the chance to be banned. Pros Can be pretend as normal enterprise tunnel Cons Hard to set up probably be blocked 2.1.4 Tinc Well, actually I don’t know why I wrote Tinc here. It’s mainly used to set up a private tunnel to traverse NAT or build up personal virtual LAN. However, I found an article of how to set up Tinc as magic ladder. Since there’s not many people to do so, I thought it would probably be a nice approach and may worth a try (though it’s so difficult to set everythings up). Link is given above, you can take a look by yourself. No Pros and Cons, since I never tried this. ","date":"2022-09-08","objectID":"/teknologio-estas-senkulpa/:2:1","tags":null,"title":"Teknologio Estas Senkulpa","uri":"/teknologio-estas-senkulpa/"},{"categories":["技术无罪"],"content":"2.2 Proxies A proxy server is a server application that acts as an intermediary between a client requesting a resource and the server providing that resource. Normally, proxies lack encryption, and that’s what differentiates a VPN and a proxy. 2.2.1 SOCKS When talk about proxies, you cannot avoid saying anything about SOCKS, especially SOCKS5. SOCKS, which stands for Socket Secure, is an Internet protocol that exchanges network packets between a client and server through a proxy server. Practically, a SOCKS server proxies TCP connections to an arbitrary IP address, and provides a means for UDP packets to be forwarded. As a protocol defined in RFC 1928, SOCKS5 is an incompatible extension of the SOCKS4 protocol; it offers more choices for authentication and adds support for IPv6 and UDP, the latter of which can be used for DNS lookups. 2.2.1.1 ShadowSocks Socks5 born the MOST FAMOUS magic ladder – ShadowSocks(SS). Created in 2012, ShadowSocks is not a proxy on its own, but (typically) is the client software to help connect to a third-party Socks5 proxy, which is similar to an SSH tunnel. Once connected, internet traffic can then be directed through the proxy. Unlike an SSH tunnel, ShadowSocks can also proxy UDP traffic. ShadowSocks was once most commonly used tool, until August 2015, the creator was invited to have a cup of tea by the DPRK police, and all the source code of ShadowSocks were removed from github. 2.2.1.2 ShadowSocksR After the SS project stopped, another developer claims that SS is easy to be detected by GFW, so improvements have been made in terms of confusion and protocol, making it harder to detect, and fully compatible with SS. The improved project is called ShadowSocksR(SSR). Well, nowadays, it seems no differnces between the SS and the SSR. In the massacre of magic ladder each year when holding the Great Meetings in DPRK, the victims are mainly use SS or SSR proxies. 2.2.1.3 SSRoT Forked from the original SSR, yet another developer take over senior’s work. First developed in 2019, SSRoT focus on the network traffic of “SSR over TLS”. It has been proved that this is probably the only SOCKS plan that still alive currently, and pretty worth a try. 2.2.1.4 Other SOCKS Implementions Besides all those ShadowSocks-like plans, there are some other implemetion of SOCKS proxy, such as Daze, Brook, and Lightsocks. All these plans are proved to be killed when the Great Meetings held. You can have a try if you really curious about them. Since they are still in active development, so there’s may be a chance to success. Note that all technologies based on the SOCKS proxy without encryption and obfuscation, are not stable and quite danger, due to the recognition algorithm of GFW. 2.2.2 V2Ray \u0026 Trojan \u0026 XRay After ShadowSocks been blocked by the GFW, a developer called “Victoria Raymond” created another great magic ladder in 2015, and named it “V2Ray”. Afterwards, he build up a HUGE environment consists of a set of tools surrounding it, called “Project V”. Nevertheless, after two years of active maintained, Victoria Raymond disappeared. Nobody could find him anymore, just like Satoshi Nakamoto. So other people forked his code and rebuild his empire, thus we have the brand new “Project V”, and the core project is called “V2Fly”. 2.2.2.1 VMess \u0026 VMessAEAD When we talk about V2Ray, we always refer to the VMess Protocol. VMess, the first original protocol designed by V2Ray, is a protocol based on TCP. All data was transmitted by TCP. It’s a stateless protocol, that is, the client and the server can directly transmit data without handshaking, and each data transmission has no impact on other data transmissions before it or after it. The client of VMess initiates a request, and the server determines whether the request comes from a legitimate client. If the verification passes, the request is forwarded and the obtained response is sent back to the client. VMess uses an asymmetric format, that is, the request sent by the client an","date":"2022-09-08","objectID":"/teknologio-estas-senkulpa/:2:2","tags":null,"title":"Teknologio Estas Senkulpa","uri":"/teknologio-estas-senkulpa/"},{"categories":["技术无罪"],"content":"2.3 Commercial Plans Well, actually I don’t wanna talk a lot about those commercial plans. But there are two I have to mention here, Lantern and Psiphon. They are all very popular when came out, and soon being blocked by the GFW. VERY SOON. Besides, at first they are all free and opensource. After being blocked, they became commercial plans. Obviously, they are weapons of hostile forces abroad, and what’s more, they failed. LOL. ","date":"2022-09-08","objectID":"/teknologio-estas-senkulpa/:2:3","tags":null,"title":"Teknologio Estas Senkulpa","uri":"/teknologio-estas-senkulpa/"},{"categories":["技术无罪"],"content":"3. Performance Test In this section, I will show you the performance test result of IKEv2, OpenVPN(UDP), SSRoT, Trojan-Go and XRay(VLess + XTLS). These are the most common use and proved to be available and stable plans. Test Environment: VPS with 1 vCore, 1024MB Memory, 15GB SSD, Shared 5Gbps Connection, installed Ubuntu 20.04LTS with BBR(FQ), IP in Canada China Unicom 5G mobile phone provides local network through WIFI hotspot to the laptop IPv4 Test Methods: Ookla SpeedTest.net Netflix Fast.com Youtube Nerd Data of Random 4K Video ","date":"2022-09-08","objectID":"/teknologio-estas-senkulpa/:3:0","tags":null,"title":"Teknologio Estas Senkulpa","uri":"/teknologio-estas-senkulpa/"},{"categories":["技术无罪"],"content":"3.1 Infrastructures The laptop connection speed under WIFI: The laptop ping server: The server connection speed under BBR(FQ): ","date":"2022-09-08","objectID":"/teknologio-estas-senkulpa/:3:1","tags":null,"title":"Teknologio Estas Senkulpa","uri":"/teknologio-estas-senkulpa/"},{"categories":["技术无罪"],"content":"3.2 IKEv2 The IKEv2 SpeedTest Result: The IKEv2 Fast Result: The IKEv2 Youtube Result: ","date":"2022-09-08","objectID":"/teknologio-estas-senkulpa/:3:2","tags":null,"title":"Teknologio Estas Senkulpa","uri":"/teknologio-estas-senkulpa/"},{"categories":["技术无罪"],"content":"3.3 OpenVPN(UDP) The OpenVPN(UDP) SpeedTest Result: The OpenVPN(UDP) Fast Result: The OpenVPN(UDP) Youtube Result: ","date":"2022-09-08","objectID":"/teknologio-estas-senkulpa/:3:3","tags":null,"title":"Teknologio Estas Senkulpa","uri":"/teknologio-estas-senkulpa/"},{"categories":["技术无罪"],"content":"3.4 SSRoT The SSRoT SpeedTest Result: The SSRoT Fast Result: The SSRoT Youtube Result: ","date":"2022-09-08","objectID":"/teknologio-estas-senkulpa/:3:4","tags":null,"title":"Teknologio Estas Senkulpa","uri":"/teknologio-estas-senkulpa/"},{"categories":["技术无罪"],"content":"3.5 Trojan-Go The Trojan-Go SpeedTest Result: The Trojan-Go Fast Result: The Trojan-Go Youtube Result: ","date":"2022-09-08","objectID":"/teknologio-estas-senkulpa/:3:5","tags":null,"title":"Teknologio Estas Senkulpa","uri":"/teknologio-estas-senkulpa/"},{"categories":["技术无罪"],"content":"3.6 XRay(VLess + XTLS) The XRay(VLess + XTLS) SpeedTest Result: The XRay(VLess + XTLS) Fast Result: The XRay(VLess + XTLS) Youtube Result: According to the above information and data, as well as my actual test situation, I was deeply impressed by the Ttojan-Go. It was really fast, and what’s more, due to the large amount of data transfer, my poor VPS cannot bear the test case. Each time after I tested Trojan-Go, the CPU and memory usage raised up to over 80%, thus when I tried to run the second test case, network speed will drop down. I have to reboot the VPS manually. However, when we concerned about the stream media, those VPNs are much better than TLS. The best one when watching 4K video is OpenVPN(UDP). And it’s the only one without too much lags. Since my direct ping to my server is pretty high, a little lags when streaming 4K is OK for me. I must point out that I’m quite disappointed by the XRay(VLess + XTLS). It’s performance was not as good as expected, especially when streaming videos, the average speed is only about 6000-8000kbps. Maybe my settings are wrong, while I haven’t used CDN in the test. If I use CDN, I think its speed will be much slower. ","date":"2022-09-08","objectID":"/teknologio-estas-senkulpa/:3:6","tags":null,"title":"Teknologio Estas Senkulpa","uri":"/teknologio-estas-senkulpa/"},{"categories":["技术无罪"],"content":"4. Summary Well, for me, I would probably consider a two-way plan, combined with a TLS plan (maybe Trojan) as Plan A, and a VPN plan (maybe IKEv2) as Plan B. In the future, I plan to write a bash script, which will automatically install either one of them from the above five plans. A five-in-one script. If I finished, I will update this article and append that link. The title of the this article is an Espranto sentence, which means that Technology is innocent. Only those who use it may commit crimes. Never use technology to do anything illegal or criminal. When browsing the Internet, you must pay attention to what can be done and what can not be done. Always look before you leap. Freedom is the freedom to say that two plus two make four. If that is granted, all else follows. — George Orwell 1 George Orwell – 1984 Part 1, Chapter 7 ↩︎ ↩︎ ","date":"2022-09-08","objectID":"/teknologio-estas-senkulpa/:4:0","tags":null,"title":"Teknologio Estas Senkulpa","uri":"/teknologio-estas-senkulpa/"},{"categories":["安卓那点事儿"],"content":"时间来到了2021年，贫困的我还在使用小米公司于2017年发布的小米6手机。电池续航严重跟不上趟，MIUI11系统在骁龙835下卡顿也非常明显。但是5.15寸的屏幕在大屏林立的今天实在是我这种手小的人的福音，多少还是不愿意换机。大概我就是雷总口中的米6钉子户吧。 但是手感再好也难掩系统的卡顿和频繁的死机，于是我决定做一把“搞机党”，为我的小米6刷上了国产ROM——魔趣系统。新系统使用极其流畅，续航也有大幅改观，在这里把刷机过程给大家分享一下，帮助手里有旧手机的朋友们挽救一下，兴许还能再战一年也未可知？ 注意：以下内容全部以小米6手机为硬件对象，不保证其他手机的完美适配。目前魔趣ROM官方宣称可以适配大部分品牌的机型，具体支持手机型号列表可在这个链接左侧栏目进行查看。据笔者所知，一加旗下诸多机型适配最好，小米/红米、魅族也基本可以完美适配，华为/荣耀适配范围较小。 注意：刷机有风险，玩机需谨慎！！机器有价，数据无价！！ ","date":"2021-01-09","objectID":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/:0:0","tags":null,"title":"魔趣安卓系统刷机教程","uri":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/"},{"categories":["安卓那点事儿"],"content":"0.魔趣介绍 魔趣 ROM 基于 Android 开源项目 (AOSP) 二次开发，所有的定制都遵循 Google 推出的 Material Design 设计语言，与原生 Android 界面保持着一致，这种定制方式降低了版本升级的难度。相比设备制造商迟缓、不积极的更新，魔趣 ROM 总能紧随 Google，早早为用户带来最新的 Android 系统。 本地化功能的缺失曾让许多钟情于原生 Android 的用户望而却步，魔趣 ROM 出色的本地化功能一经推出就获得了大量用户的青睐，让原生 Android 从此变得好用起来! 相比设备制造商臃肿的定制系统，魔趣 ROM 简单纯净，性能出众，使您能够更加轻松的使用设备。 上面是魔趣官网对于自己的介绍，它是基于安卓开源代码的中国本地化改版，由国人团队开发维护，所有源码开源，有条件的朋友可以自行编译部署。其实对于刷机较多的朋友，可能感觉它和另一款著名开源ROM——CyanogenMod（CM）非常相似。团队表示是受了CM的启发，我个人认为早期版本可能使用了部分CM的源码。当然CM现在已经停止维护了，但是魔趣ROM社区仍然是很活跃的——得益于我国人口基数还是比较大的。 ","date":"2021-01-09","objectID":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/:1:0","tags":null,"title":"魔趣安卓系统刷机教程","uri":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/"},{"categories":["安卓那点事儿"],"content":"1.准备工作 刷机之前，请务必备份手机里所有重要的个人数据，包括但不限于：通讯录、照片、应用数据等。刷机过程中可能会双清或者四清导致全部个人数据被清空，所以一定一定做好备份！ ","date":"2021-01-09","objectID":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/:2:0","tags":null,"title":"魔趣安卓系统刷机教程","uri":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/"},{"categories":["安卓那点事儿"],"content":"2.手机解锁 现在不少手机是锁BootLoader的，BootLoader对于嵌入式设备（如ARM架构）而言类似于PC设备的BIOS。出于对设备安全性的考虑，厂商会锁定BootLoader以防止恶意程序或者不法分子篡改。那么如果我们要更换操作系统，第一步就是需要解锁BootLoader。小米手机的解锁请参考这个页面，先下载手机解锁程序到电脑上，解压缩后，依次执行如下步骤： 在电脑上打开小米手机解锁程序（miflash_unlock.exe）； 同意条款，登录小米账户，进入待解锁界面； 拿出手机，进入“设置 -\u003e 我的设备 -\u003e 全部参数”页面； 这时连续点击MIUI版本号7次； 直到手机屏幕提示已经处于开发者模式即可停止点击； 进入“设置 -\u003e 更多设置 -\u003e 开发者选项 -\u003e 设备解锁状态”中按照提示绑定账号和设备； 手动进入Bootloader模式（先关机，然后同时按住开机键和音量下键，直到手机界面出现米兔画面和FASTBOOT字样）； 通过USB连接手机，点击程序上的“解锁”按钮。 解锁过程中根据电脑情况可能会自动安装小米手机驱动，并且联网验证当前手机，所以需要保持电脑和手机的联网状态。另外，根据机型不同，程序会提示解锁操作是否会清空全部用户数据，请注意备份数据。 解锁后手机会自动重启，如果解锁成功，在启动界面下方会出现一把打开的小锁头图标和“unlocked”字样。此时标志着第一步成功完成。 ","date":"2021-01-09","objectID":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/:3:0","tags":null,"title":"魔趣安卓系统刷机教程","uri":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/"},{"categories":["安卓那点事儿"],"content":"3.刷入Recovery Recovery是Android手机备份功能，指的是一种可以对安卓手机内部的数据或系统进行修改的模式（类似于windows PE或DOS）。在这个模式下可以，对已有的系统进行备份或升级，也可以在此恢复出厂设置。 我们接下来要使用的是国际著名Recovery组织TeamWin开发的大名鼎鼎的安卓Recovery——TWRP。小米6版可以在文后链接下载。下载工具并解压缩后，依次执行如下步骤： 进入手机系统，清除系统密码（锁屏密码），将锁屏设置为无密码（如通过第三方软件加密了文件系统，请解密，否则刷机后可能会变砖）； 手机进入BootLoader，方法：先关机，然后同时按住开机键和音量下键，直到手机界面出现米兔画面和FASTBOOT字样； 之后将手机用数据线连接电脑； 之后在解压的工具包里找到“一键刷入recovery(需要先解bl锁).bat”文件，双击打开； 确保手机已经进入BootLoader（FASTBOOT）并连接电脑后，前两个界面按回车键继续； 后续界面依次按照程序上半部分提示仔细核对程序下半部分的输出信息，如果一致，一路按回车键即可开始自动刷入Recovery。 如果刷入成功，程序会提示“恭喜你成功导入了recovery！”，此时按回车键退出程序即可，手机会自动重启进入Recovery。 ","date":"2021-01-09","objectID":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/:4:0","tags":null,"title":"魔趣安卓系统刷机教程","uri":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/"},{"categories":["安卓那点事儿"],"content":"4.刷入系统 前面我们准备工作已经做的非常充分了，接下来就是正式刷入系统了。系统包下载地址在这里，左侧列表中选取对应的手机品牌和支持的型号，右面会显示这部手机的相关参数和多个可供下载的版本。需要注意的是，魔趣ROM的开发团队在版本命名上很有趣，“正式版”并不代表非常稳定的版本，“每夜版”也不是问题很多的意思，换句话说，所谓的”正式版“不过是团队觉得当前大版本（安卓内核版本）已经基本没有更新升级的必要了，所以推出的一个当前大版本的最后发布版，而”每夜版“则是每天滚动更新的最新安卓内核版本对应的系统包。使用二者没差，所以推荐刷入当前最新的每夜版。 ","date":"2021-01-09","objectID":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/:5:0","tags":null,"title":"魔趣安卓系统刷机教程","uri":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/"},{"categories":["安卓那点事儿"],"content":"4.1 文件下载 如果你只想向使用正常手机系统一样体验魔趣ROM，不想获取系统最高权限或者使用Google服务，或者你是小白，不明白这些都是什么意思，那么你只按照前述下载对应手机型号的ROM系统包即可。 如果你希望获得系统最高权限（Root权限），那么请在这里下载Magisk或者AddonSU。推荐使用Magisk（又叫”面具“），它是目前最好的Xposed框架代替品，由台湾大神开发，功能强大，并且网上方便好用的模块也非常多。AddonSU是魔趣团队开发的Root权限小工具，也可以实现Root功能，但是相对来说可玩性会小非常多。需要注意的是，二者只能安装一个，不能共存。 如果你还需要Google服务，比如Google框架，用来运行一些游戏，那么请在前述页面下载OpenGApps，这是由开源团队制作的开源Google框架。需要注意的是，下载之前请先百度查询自己的手机是基于何种平台的，并确定自己要刷入的魔趣ROM所基于的安卓版本。说个小插曲，我下载之前想当然的下载了ARM版安卓10的，结果刷不进去，查了一下发现骁龙835是ARM64架构，犯了个低级错误。另外，类型建议选nano，nano是Google框架的最小可用精简版，包含了必备组件。pico版是超小残废精简版，只包含最小Google服务，很可能刷入后发现白给了，还是用不了。 这里给出我的下载的组件套装： MK100.0-sagit-202101050624-NIGHTLY open_gapps-arm64-10.0-nano-20201223 Magisk-v21.2 相关文件在文章最后可以找到链接，魔趣官网服务器由于成本原因带宽很小，下载速度会非常感人，如果你需要的组件恰好和我一样，可以在文末链接下载（ROM包根据不同的机型是不一样的，非小米6用户请不要下载MK100那个文件。剩下两个组件是通用的）。 ","date":"2021-01-09","objectID":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/:5:1","tags":null,"title":"魔趣安卓系统刷机教程","uri":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/"},{"categories":["安卓那点事儿"],"content":"4.2 存储清理 趁文件下载的时间，我们可以开始下一步工作，清理手机内部存储。清存储的过程术语讲分三种，双清，四清，五清。如果前面你已经顺利刷入Recovery了，这时手机应该自动重启到Recovery界面。如果没有，那也没关系，先关机，然后同时按住音量上和电源键，出现MIUI logo的时候只松开电源键，继续按住音量上键，直到进入Recovery为止。 总结一下 进入BootLoader（FASTBOOT）：先关机，然后同时按住音量下和电源键，出现MIUI logo的时候只松开电源键，继续按住音量下键，直到出现米兔图案和FASTBOOT字样； 进入Recovery：先关机，然后同时按住音量上和电源键，出现MIUI logo的时候只松开电源键，继续按住音量上键，直到进入Recovery。 出现蓝色的Recovery界面以后，他会询问你是否确定进入，向右滑动即可。进入后会看到八个大的功能模块，我们主要用到安装、清除和重启。 首先点击清除模块，默认是双清，双清只会删除用户数据，不会移除原有系统。比较推荐使用这个模式。 显示成功以后请点击返回，回到主菜单进行 4.3 中写的系统安装等工作。如果后续工作都正常进行，那么这个part接下来 4.2.1 中的内容就不需要看了。如果系统安装失败，那么请继续往下看，你可能需要做一个四清。 4.2.1 高级清除 如果你在尝试 4.3 中的系统安装遇到了问题，那么你可以尝试进行四清，因为这可能说明双清对你的机器并不好用。具体操作是： 首先进入Recovery主界面，然后点击清除模块，然后不要直接滑动，点击高级清除按键，勾选 Dalvik/ART Cache 选项和 System 选项。之后滑动清除。这就是四清。 双清、四清和五清的区别如下： 双清：先在Recovery界面，点击清除，此时下面有个滑动恢复出厂设置，这就是双清。相当于进入高级清除，勾选Data和Cache，该选项只会清除用户数据，不会删除原有系统，如果不刷入新系统，原有系统仍然可以使用； 四清：是在双清基础上清空了Dalvik/ART Cache（dalvik分区即虚拟内存）和System分区。 用户数据，原有系统都彻底清除，刷入的系统会更加稳定。（四清会把原来的系统全部删掉，如果你刷机失败是没法进入原来的系统，会变砖。可以通过adb导包来解决）； 五清：在上面勾选四个的情况下，再勾选内置存储（和外置U盘）。如果清除了，就需要重新导包，因为内置存储全部清空。五清可以理解为手机里所有东西都删掉了，除了还在运行的Recovery。整个手机重新来过。建议不要勾选，经常会出现各种难以预见的错误，建议最多四清。 ","date":"2021-01-09","objectID":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/:5:2","tags":null,"title":"魔趣安卓系统刷机教程","uri":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/"},{"categories":["安卓那点事儿"],"content":"4.3 安装系统 双清（或四清）手机以后，这时如果需要的文件已经下载好了，那么请用数据线连接手机和电脑，将下好的文件压缩包拷贝到手机中。注意一定不要解压！！一定原封不动的拷贝压缩包！！ 拷贝好以后在Recovery主界面点击安装模块，在存储里先选择刚才拷贝的ROM包（文件名为MK…），向右滑动即可开始安装。注意不要勾选签名校验和刷后重启，尤其是你还需要Root或者Google框架的时候。 安装顺利的话，在安装结束你会看到出现了 Done 字样。如果你不需要Root或者Google，那么你就可以返回Recovery主界面选择重启模块重启并享用丝滑的新系统了！如果需要，请继续向下看。 4.3.1 谷歌框架 在Google框架和Magisk的刷入顺序上，我个人推荐先刷入Google。当然如果你不需要，也可以直接刷Magisk。顺利刷完系统之后返回Recovery主界面，选择安装模块，找到下载拷贝进来的OpenGApps压缩包，滑动安装即可。安装末尾可能会有一句错误码为1的报错，忽略它，它会不影响什么的，同样以出现 Done 字样为准。 4.3.2 面具程序 刷完Google以后仍旧是返回Recovery主界面，选择安装模块，找到下载拷贝进来的Magisk压缩包，滑动安装即可。安装成功与否还是以出现 Done 字样为准（据我几次测试，一般这个步骤不会有什么问题）。 4.3.3 失败处理 在第一步刷入系统ROM包的时候最容易出现各类错误导致刷机失败，最常见的是错误码为7（ErrorCode:7）的各种情形。在错误码这一行红字的上方一行”Exxxx:“开头的白字是具体的报错提示，最简单的办法就是记录下这行白字然后百度一下。基本上你能遇到的问题别人也都遇到过了，按照各路大神解决的办法处理就行。比如我遇到的是 ”E3004:This package is for “Sagit” devices; this is a “\".“ 其中“Sagit”是小米6的内部代号，这个错误是说，我所使用的刷机包是给小米6准备的，但这部机器无法识别。这个问题常出现在四清之后，机器识别代码被移除了，刷机包无法通过校验。这里我附上解决办法： 在电脑上用解压缩工具打开压缩包（是打开不是解压！）； 找到META-INF/com/google/android/updater-script文件。拖拽到桌面； 用代码编辑器打开updater-script文件（建议用VS Code）,然后删除第一行，也就是这一行代码 getprop(\"ro.display.series\") == \"Sagit\" || abort(\"E3004: This package is for \\\"Sagit\\\" devices; this is a \\\"\" + getprop(\"ro.display.series\") + \"\\\".\"); 然后保存； 4. 双击开始的安装包，再找到META-INF/com/google/android/updater-script文件，然后直接把修改后的updater-script拖到里面覆盖； 5. 将修改过的ROM包拷贝至手机重新安装即可。 至于如果你遇到的是其它类型的“错误7”，请自行百度搜索解决办法。 ","date":"2021-01-09","objectID":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/:5:3","tags":null,"title":"魔趣安卓系统刷机教程","uri":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/"},{"categories":["安卓那点事儿"],"content":"5.其他工作 顺利刷入系统后重启即可享用丝滑的系统，如果你刷入了Google框架，请注意第一次重启时不要插SIM卡或者连接WIFI，否则你可能无法跳过默认的Google账户登录。在完全离线的状态下谷歌是允许跳过该步骤的，联网情况则不行。当然如果你身处“某些地区”就当我没说。 如果你刷入了Magisk，正式进入系统后请先联网，然后打开Magisk，这时它会提示你要安装Magisk软件，下载安装即可。因为之前我们刷入的是它的底层包，它需要配合上层应用一起使用。安装后你就可以纵情享受Root至高无上的权限了。Magisk的使用这里不多赘述，网上自行百度有好多奇技淫巧。 我这里只说一个我认为比较有用的：全局字体。关注“宁静之雨”公众号，这是一个搞机达人小姐姐创办的，她是Magisk字体模块的高玩，公众号里有好多Magisk字体模块，下载后拷贝到手机中，用Magisk加载就可以享受被谷歌安卓开发小组阉割掉的“中文多字重显示”功能了，拥有苹果手机般美妙的字体渲染，你说它不香吗？喜欢的朋友可以自行下载并刷入体验。 ","date":"2021-01-09","objectID":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/:6:0","tags":null,"title":"魔趣安卓系统刷机教程","uri":"/%E9%AD%94%E8%B6%A3%E5%AE%89%E5%8D%93%E7%B3%BB%E7%BB%9F%E5%88%B7%E6%9C%BA%E6%95%99%E7%A8%8B/"},{"categories":["PC那点事儿"],"content":"Windows10到现在也已经来到了20H2版本，随着系统和安装工具的更新，在这里我也更新一下三年前这篇教程，重新给大家介绍一下Windows10装机的全过程。 ","date":"2020-06-24","objectID":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/:0:0","tags":null,"title":"Windows10装机指南","uri":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/"},{"categories":["PC那点事儿"],"content":"1.准备工作 虽然我个人觉得并无必要，但是我想了一下，还是要提醒下准备装机的朋友： 在安装系统之前，一定要备份数据。 如果你正在使用Windows7，请将系统盘所在硬盘有用数据备份；如果正在使用Windows10，请将系统盘分区有用数据备份。 首先，要下载系统镜像制作启动U盘。点击这个页面中的 「立即下载工具」下载Windows10媒体创建工具，你会得到一个「MediaCreationTool」。 接下来就是打开这个工具。我比较推荐的选项是：「为另一台电脑创建安装介质」—— 默认 ——「ISO文件」。 这样你将会得到一个Windows10的ISO镜像。一般我们下载64位Windows10这个版本。 第二步是在这个页面下载Rufus Portable，一款开源的免费启动盘制作工具。 感谢它的作者Pete Batard开发出功能强大的Rufus并将它无私的开源。 打开Rufus之前请在电脑上插入要作为启动盘的U盘。必须保证8G以上，而且是空U盘，因为下一步会将其格式化。 打开Rufus后会自动检测USB设备，如果你插有多个U盘， 一定注意不要弄错了盘符避免误删重要数据。 引导类型选择默认的「镜像文件」，点击右侧的「选择」，找到并选择前面下载的Windows10 ISO镜像。 「分区类型」一栏应选择「GPT」，「目标系统类型」选择「UEFI」，然后单击下面「开始」执行操作。 待上述操作结束后，关闭Rufus，你就拥有了一个Windows10启动盘。至此，你已经完成了所有的准备工作，可以开始装机了。 ","date":"2020-06-24","objectID":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/:1:0","tags":null,"title":"Windows10装机指南","uri":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/"},{"categories":["PC那点事儿"],"content":"2.装机进程 ","date":"2020-06-24","objectID":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/:2:0","tags":null,"title":"Windows10装机指南","uri":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/"},{"categories":["PC那点事儿"],"content":"2.1 引导设置 一般来说我们大部分人的电脑默认都是「光驱——硬盘——USB」这样的引导顺序。所以在使用U盘重装系统时必须先修改BIOS，设置为U盘在硬盘之前的引导顺序。 进BIOS的方法，Legacy（Win7）和UEFI（Win10）引导模式是不同的。由于Win7用户较少，在此不多赘述，可以自行上网搜索，下面我将讲解下Win10如何进入BIOS。 首先点击桌面左下角的「开始」图标，点击「设置」，选择「系统更新与安全」。 选择「恢复」-「立即重新启动」，重启电脑进入高级设置。 选择下方的「疑难解答」，进入后点击「高级选项」。 选择最后的「UEFI固件设置」进入后，点击「重启」。 等待电脑重启后就进入bios可以进行设置了。重启之前首先要插入刚刚制作好的启动U盘。 进入BIOS后只需将U盘引导设置为第一顺位即可，无需做其他更改，保存并退出重启。 这部分如果有不太明确的，可以看这个图文链接。 ","date":"2020-06-24","objectID":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/:2:1","tags":null,"title":"Windows10装机指南","uri":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/"},{"categories":["PC那点事儿"],"content":"2.2 分区方案 2.2.1 修改分区表 此部分内容仅适用于Windows7以及其他使用MBR分区方案升级Windows10时使用。已经采用GPT方案的（如大部分Win10）可以直接略过。 在进入装机界面后，如果使用MBR分区方案，会发现无论哪个分区都显示无法安装系统。 这时候在键盘上按下「Shift+F10」，调出命令行，依次输入以下命令。 diskpart list disk :: 找到上一命令执行后回显结果中，待安装系统的磁盘的编号。 :: 可以用磁盘空间大小分辨，假设为第0号 select disk 0 clean convert gpt 完成后关闭命令行，并且关闭安装进程，重启电脑并重新开始安装过程。 此时可以看到硬盘分区表已经重建，可以正常进入安装系统过程。 2.2. 格式化分区 如果你的电脑在重装之前已经存在系统，那么在安装开始之前，Win10安装程序会询问你是需要 「升级旧系统」还是「全新安装系统」。 我个人建议选择重新安装而不是升级，因为升级旧系统这个功能我认为微软开发的并不是很易用。 在选择系统分区界面可以使用「新建」和「格式化」功能建立分区。注意建立分区时输入的数值单位是MB，如按照GB计算需要乘1024转换。 比如需要建立100GB分区则为100x1024=102400MB。C盘建议大小为100-120GB。分区结束后即可安装系统。 ","date":"2020-06-24","objectID":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/:2:2","tags":null,"title":"Windows10装机指南","uri":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/"},{"categories":["PC那点事儿"],"content":"2.3 系统激活 一般来说我们装机都是选用64位Windows10专业版进行安装。家庭版在功能上有缩水，并不推荐。 原则上我们的安装过程到这里已经结束了，后面一直「下一步」就行。还有一些是用户自定义设置例如用户名、密码等，无需赘述。 需要注意的是安装过程中会要求输入序列号。序列号的话，家庭版市售价888元，购买后可以在Win10商城里以488元的价格升级专业版。建议购买正版。 注意！！下述内容仅供学习交流、经验分享之用，切勿用于实践！！ 本文作者不对任何在阅读本文之后进行的违反《中华人民共和国著作权法》、《计算机软件保护条例》等相关法律的行为承担直接或者连带责任！！ 其他获得序列号的途径还有X宝，直接搜索「Win10序列号」，10-20元就可以买到。不用担心不能用，都是真的。 它们只不过是厂家专用版的而已，不是个人零售版的，但是实际二者没有区别。解释起来比较复杂，放心用就好。 ","date":"2020-06-24","objectID":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/:2:3","tags":null,"title":"Windows10装机指南","uri":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/"},{"categories":["PC那点事儿"],"content":"3.收尾工作 ","date":"2020-06-24","objectID":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/:3:0","tags":null,"title":"Windows10装机指南","uri":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/"},{"categories":["PC那点事儿"],"content":"3.1 驱动程序 经历前面的步骤我们的电脑已经基本可以使用了。但是如果不安装驱动程序的话可能某些组件无法正常工作，最常见的就是显卡了。 那么关于驱动程序应当如何安装，这里我讲两个方法。 从官方网站上安装。 很多OEM厂商提供官方的驱动程序安装源，如联想、戴尔、华硕等传统大厂和微星、雷神等新派游戏本厂。 你只需要下载所有的对应型号和对应系统的驱动程序包然后依次安装。有的厂商提供驱动下载器，你也只需按要求操作即可。 建议这样安装后校验驱动如果没有问题，将安装包或下载器保存起来以便下一次重装系统时用。校验方法见下文。 从第三方驱动软件里下载。 市面上常见的第三方驱动管理有驱动精灵、驱动大师、百度腾讯360旗下的产品等。这些软件操作容易，傻瓜化安装很方便。 但我并不推荐作为首选，因为他们的原理是识别并匹配你计算机的硬件，然后提供对应的驱动。这种途径不如从官网上下载“稳妥”。 我个人最推荐的是驱动精灵，尤其喜欢它的「万能网卡版」，解决重装系统时缺少网卡驱动十分顺手，建议常备。 最重要的一点是，无论用哪种途径安装驱动，一定记得： 要先安装集成显卡驱动再安装独立显卡驱动！！ 尤其在使用自动化工具时很容易忽视这一点。第二点我想强调的是： 一定要去英伟达或AMD官网下载独显驱动！！ 无论用厂商提供的驱动还是第三方提供的驱动，都不要用他的独显驱动，要从英伟达或者AMD的官网下载。 英伟达显卡用户在这里下载GeForce Experience。 AMD显卡用户在这里下载AMD Adrenalin。 使用这两款软件可以下载自己电脑显卡对应的最新驱动。 安装好驱动之后可以在「此电脑」上右键——管理——设备管理器 中校验驱动情况，如果全部正常安装没有缺失， 就不会显示错误。如果有问题会在对应的设备左下角显示一个黄色感叹号，提示缺少驱动。 ","date":"2020-06-24","objectID":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/:3:1","tags":null,"title":"Windows10装机指南","uri":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/"},{"categories":["PC那点事儿"],"content":"3.2 系统设置 3.2.1 桌面设置 进入系统之后第一件事应该是调整画面和显示的相关设置。目前Windows10通常可以较好的识别并匹配屏幕分辨率。 如果分辨率有误，桌面上右键——显示设置可以调整分辨率和文字大小。在 个性化——主题——桌面图标设置 里面可以选择需要出现在桌面上的系统图标。左下角「开始」图标旁边可以看到Win10最强大的助手：Cortana。 我想说如果你用她的频率很高那可以保留，如果你像我一样不常使用她，不妨在任务栏上 右键——Cortana——隐藏 。 如果不喜欢长长的搜索框，也可以在任务栏上 右键——搜索——隐藏 。 这样能让你的任务栏看起来更整洁。随便打开一个文件夹，在工具栏里面勾选「文件扩展名」和「隐藏的项目」，有利于日常反病毒。 左边资源管理器里面有一栏「快速访问」，右键点击它——选项 取消「隐私」栏目里面的两个对勾，点击「清除」删除历史记录。这样有利于个人隐私的保护。同时，在对话框最上方有一个「打开文件资源管理器时打开」，建议设置为「此电脑」，比较符合国人的使用习惯。 3.2.2 高级设置 下面的设置较为高级，有一定计算机基础的朋友可以尝试。 我一般会通过缩小系统文件的方式给C盘“瘦身”。如果你开启了“显示系统隐藏文件”，在C盘中你会看到两个大文件：pagefile.sys和hiberfil.sys。 前者是系统的分页文件，即虚拟内存，是用于弥补物理内存可能出现的不足情况设置的，其大小可达到物理内存的一至二倍。 后者是休眠文件，由于Windows系统休眠时内存不工作，故需要将休眠文件转存到硬盘中，下次热启动时直接读取。其大小一般等同于或略大于物理内存。 以我的电脑为例，物理内存16G，pagefile.sys 20G，hiberfil.sys 16G。我C盘110G的空间被这两个文件占用了36G。 “瘦身”方法也很简单，打开开始菜单，直接输入「cmd」，在搜索到的「命令提示符」上右键——以管理员身份运行 ，输入命令： powercfg -h off 并回车确认。这条命令的作用是关闭休眠服务。其结果可能会导致耗电量较大，但如果你一直使用外接电源，那么这个方法可以节省C盘空间。 分页文件的处理相对复杂。打开一个文件夹，在左侧资源管理器中「此电脑」上右键——属性——高级系统设置， 在弹出的设置窗口切换到高级——性能设置——高级——虚拟内存更改。取消「自动管理所有驱动器分页文件大小」对勾去除， 选择C盘，自定义大小1024-2048。再选择任何一个空间较大的其他盘符，设置为「系统管理的大小」，然后设置——确定。 执行完操作后重启计算机即可。 ","date":"2020-06-24","objectID":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/:3:2","tags":null,"title":"Windows10装机指南","uri":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/"},{"categories":["PC那点事儿"],"content":"3.3 必备软件 3.3.1 Office 终于大功告成了，到了最后一步，安装软件了。首先我们来安装Office。 订阅Office365一年只需要399元，如果你有edu结尾的邮箱还是免费的。能用正版还是尽量支持正版，我还是希望能有更多的人建立版权意识。 注意！！下述内容仅供学习交流、经验分享之用，切勿用于实践！！ 本文作者不对任何在阅读本文之后进行的违反《中华人民共和国著作权法》、《计算机软件保护条例》等相关法律的行为承担直接或者连带责任！！ 这里我给大家分享一个神器，叫「Office Tool Plus」，是由国人开发的强大Office辅助安装工具。 在官网可以下载软件，具体的操作不多赘述，可以参考这个教程，一步步完成部署、激活即可。 3.3.2 装机必备 在这里我给出一个我认为装机必备的简单软件列表。 Adobe Acrobat PotPlayer 7-Zip 微信PC版 Everything ","date":"2020-06-24","objectID":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/:3:3","tags":null,"title":"Windows10装机指南","uri":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/"},{"categories":["PC那点事儿"],"content":"4.结语 装机到此结束了。Enjoy it！ ","date":"2020-06-24","objectID":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/:4:0","tags":null,"title":"Windows10装机指南","uri":"/windows10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/"}]